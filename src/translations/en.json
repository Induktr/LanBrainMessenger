{
  "header": {
    "features": "Features",
    "news": "News",
    "faq": "FAQ",
    "faqLink": "FAQ",
    "docs": "Docs",
    "updates": "Updates",
    "selectLanguage": "Select language",
    "changeLanguageTooltip": "Change language",
    "lightMode": "Light Mode",
    "darkMode": "Dark Mode",
    "openMenu": "Open menu",
    "closeMenu": "Close menu",
    "settings": "Settings",
    "signOut": "Sign Out",
    "deleteAccount": "Delete Account",
    "deleteAccountConfirmTitle": "Confirm Account Deletion",
    "deleteAccountConfirmMessage": "Are you sure you want to delete your account? This action cannot be undone.",
    "cancel": "Cancel",
    "confirmDelete": "Confirm Deletion",
    "signIn": "Sign In"
  },
  "hero": {
    "title": "Welcome to BrainMessenger",
    "subtitle": "Your Smart Communication Platform",
    "getStarted": "Get Started",
    "learnMore": "Learn More",
    "connectSmarterTitle": "Connect Smarter with BrainMessenger",
    "connectSmarterSubtitle": "Experience the next generation of messaging with advanced features, unparalleled security, and seamless communication across all your devices.",
    "downloadButton": "Download",
    "downloadWindows": "Download for Windows",
    "downloadAndroid": "Download for Android"
  },
  "features": {
    "featuresTitle": "Key Features",
    "featuresSubtitle": "Discover what makes us unique",
    "secureMessaging": "Secure Messaging",
    "secureMessagingDesc": "End-to-end encryption for your privacy",
    "smartAssistant": "Smart Assistant",
    "smartAssistantDesc": "AI-powered help at your fingertips",
    "crossPlatform": "Cross Platform",
    "crossPlatformDesc": "Use on any device, anywhere",
    "groupChats": "Group Chats",
    "groupChatsDesc": "Connect with multiple people at once",
    "privacyFirst": "Privacy First",
    "privacyFirstDesc": "Your data is yours, always"
  },
  "news": {
    "latestNews": "Latest news",
    "readMore": "Read More"
  },
  "faq": {
    "title": "Frequently Asked Questions",
    "subtitle": "Find answers to common questions about BrainMessenger",
    "searchAlt": "Search icon",
    "searchPlaceholder": "Search questions...",
    "allQuestions": "All Questions",
    "noResults": "No questions found matching your search.",
    "categories": {
      "general": "General",
      "technical": "Technical",
      "security": "Security",
      "pricing": "Pricing",
      "generalProject": "General Project Questions",
      "technicalQuestions": "Technical Questions",
      "developmentProcesses": "Development Processes",
      "statusRoadmapFuture": "Status, Roadmap, and Future",
      "challengesOpportunitiesLimitations": "Challenges, Opportunities, and Limitations",
      "learnMoreContribute": "Learn More and Contribute"
    },
    "questionsData": {
      "generalProject": {
        "q1": {
          "question": "What is the main idea behind BrainMessenger? What makes it special?",
          "answer": "BrainMessenger is not just another messenger. Our main idea is to create a Digital ASSET (Principle 10) that simplifies complex interaction (Margulan Seisembayev's principle) and serves as a reliable tool for effective communication. We are focused on quality (Principle 3), security (Principle 5), and reliability (Principle 3), not just a set of features. We are building a SYSTEM (Principle 9) that reflects our principles and is constantly improving."
        },
        "q2": {
          "question": "What key principles underpin the development of BrainMessenger?",
          "answer": "The project is based on a set of 15 key principles (see My Key Principles), inspired by Margulan Seisembayev and IT industry best practices. The most important ones influencing code and processes are: Continuous Learning (Principle 1), Value Creation (Principle 2), Quality > Quantity (Principle 3), System and Optimization (Kaizen, Principle 9), Long-Term Thinking (Principle 8), Pragmatism and Realism (Principle 12), Persistence (Principle 13), Bias for Action (Principle 15). We strive for these principles to permeate all aspects of the project."
        },
        "q3": {
          "question": "Who is behind the project? Is it an open community or a team?",
          "answer": "Currently, the project is at an early stage and is actively being developed by one person (you), who is the driving force and bears responsibility (Principle 6) for its construction. In the future, it is planned to attract contributors and possibly form a team. The project is open for contributions (see CONTRIBUTING.md)."
        }
      },
      "technicalQuestions": {
        "q1": {
          "question": "Why was this particular technology stack chosen (TypeScript, NestJS, React/RN, PostgreSQL/Neon, GraphQL, Kafka, Redis, Cloudflare R2, etc.)?",
          "answer": "The choice of stack is based on pragmatism (Principle 12), long-term thinking (Principle 8), and the pursuit of quality (Principle 3) and scalability (NFR-14, NFR-15).\n*   TypeScript: Increases code reliability and maintainability through strong typing.\n*   NestJS: Provides a powerful, modular architecture for the Backend, simplifying the construction of scalable applications.\n*   React/React Native/Next.js: Allow building UI for different platforms from a single codebase (cross-platform) and provide good performance.\n*   PostgreSQL (Neon): A reliable, proven relational database with extensive scaling and optimization capabilities. Neon as a managed service reduces operational overhead (Pragmatism).\n*   Prisma: Chosen as a reliable ORM, providing type safety and built-in protection against SQL injection (Quality, Security).\n*   GraphQL: Allows clients to request only the data they actually need with a single query, optimizing network interaction (especially for mobile clients) and reducing data redundancy compared to REST. GraphQL also simplifies fetching related data (solving N+1 problems with DataLoader).\n*   Kafka: Chosen for reliable asynchronous task processing, which is critical for scalability and fault tolerance.\n*   Redis: High-performance In-memory store for caching, Rate Limiting, and real-time state management.\n*   Cloudflare R2: Object storage with very favorable terms (no egress fees), ideal for storing user files (Pragmatism, ASSET).\n\nThis stack allows laying a solid technical foundation (Principle 8) for future development."
        },
        "q2": {
          "question": "Why is a monolithic architecture used at the start, rather than microservices immediately?",
          "answer": "Using a monolithic architecture at the start (MVP) is a pragmatic and realistic decision (Principle 12). It allows for rapid development and iteration of basic functionality, minimizing complexity at an early stage when the team is small. Launching the MVP is more important than building an overly complex architecture. Once the MVP will be completed and the project starts to grow, a phased transition to microservices is planned (see Microservice Migration Plan)."
        },
        "q3": {
          "question": "What approaches are used to ensure security?",
          "answer": "Security is a fundamental aspect (Principle 5) and a priority (see Security Guide).\n*   Data encryption in transit (TLS 1.2+) and at rest (AES for sensitive data, encryption in R2).\n*   Strong password hashing (bcrypt/argon2).\n*   Using Prisma to prevent SQL injection.\n*   Validation of all input data on the Backend.\n*   Two-factor authentication (2FA) via email.\n*   Rate Limiting to protect against brute-force and DDoS attacks.\n*   Regular vulnerability scanning.\n*   Storing secrets in secure locations (Kubernetes Secrets)."
        },
        "q4": {
          "question": "How is real-time functionality implemented (message exchange)?",
          "answer": "Real-time functionality (message exchange) is implemented using WebSockets. The Backend (NestJS Gateway) manages WebSocket connections, and clients subscribe to chat events. Message delivery occurs via WebSocket. For scaling WebSockets in a microservice architecture, Redis Pub/Sub or Kafka will be used."
        },
        "q5": {
          "question": "Why is GraphQL used instead of REST API?",
          "answer": "GraphQL allows clients to request only the data they actually need with a single query. This optimizes network interaction (especially for mobile clients) and reduces data redundancy compared to REST. GraphQL also simplifies fetching related data (solving N+1 problems with DataLoader)."
        },
        "q6": {
          "question": "How are large volumes of data and files managed?",
          "answer": "*   Structured data (messages, users, chats): Stored in PostgreSQL (Neon). Indexes and query optimization (Prisma) are used for fast retrieval. As it grows, table partitioning and database replication are planned.\n*   Unstructured data (files, images): Stored in Cloudflare R2. Asynchronous processing (Kafka) is used for image optimization before uploading. R2 is chosen for scalability and favorable traffic rates."
        }
      },
      "developmentProcesses": {
        "q1": {
          "question": "What is the approach to project and task management?",
          "answer": "The project is managed using a planning system (see My Planning System 2025-2026) in Notion. Global goals are decomposed into stages (Roadmap), weekly planning, and a task tracker are used. An important element is the Kaizen Hour (Principle 9) for daily reflection, analyzing bottlenecks, and finding ways to improve."
        },
        "q2": {
          "question": "How is code quality ensured?",
          "answer": "Code quality is ensured through systematic approaches (Principle 3, 9):\n*   Using TypeScript with strict typing.\n*   Adhering to coding standards (ESLint, Prettier).\n*   Code review of all changes.\n*   Automated testing at different levels (Unit, Integration, E2E).\n*   Continuous Integration (CI) for automatic code and test checks on every commit/PR."
        },
        "q3": {
          "question": "What testing strategy is used?",
          "answer": "A multi-level testing strategy is used (see Testing Guide), combining manual and automated testing: Unit, Integration, API, E2E, Load, Security, Regression. Tests are integrated into CI/CD. The focus is on verifying key requirements (FRs, NFRs)."
        },
        "q4": {
          "question": "How are errors handled?",
          "answer": "Errors are handled centrally and uniformly on the Backend (NestJS Exception Filters) and converted to a standard API response format with codes (extensions.code). On the Frontend, errors are processed based on these codes, displaying a clear message to the user and suggesting an action. All errors are thoroughly logged (Winston → ELK) and sent to Sentry for tracking and analysis (see Error Specification, Monitoring Guide)."
        },
        "q5": {
          "question": "How is the project deployed?",
          "answer": "Deployment is automated through a CI/CD pipeline (GitHub Actions). Docker is used for containerization and Kubernetes for orchestration in the cloud. Infrastructure is described as code (Terraform). The process includes automatic build, testing, image publishing, and Rolling Updates in Kubernetes for zero-downtime deployment (see Deployment Guide)."
        },
        "q6": {
          "question": "How is the system monitored in production?",
          "answer": "The monitoring system is the eyes and ears of the project (Principle 9, 5). The following are used:\n*   Prometheus for collecting performance and resource metrics.\n*   Grafana for visualizing metrics and dashboards.\n*   Sentry for tracking application errors (Frontend and Backend).\n*   ELK Stack (or Kibana with Winston) for centralized logging and analysis.\n*   Alertmanager for configuring automatic alerts about problems.\nThese tools allow for proactive problem identification and optimization (see Monitoring Guide)."
        }
      },
      "statusRoadmapFuture": {
        "q1": {
          "question": "What is the current status of the project?",
          "answer": "The project is in the active development phase of the Minimum Viable Product (MVP). The main technological foundation has been laid, key UI elements and basic security have been implemented. The core messaging, file handling, and group/channel creation are in progress. (See BrainMessenger Project Requirements (MVP) Guide)."
        },
        "q2": {
          "question": "What are the next steps after completing the MVP?",
          "answer": "After completing the MVP, the next steps include adding advanced functions (audio/video calls, Premium, extended security, full set of animations and localization), further performance optimization, and preparing for scaling. A detailed plan is presented in the BrainMessenger Roadmap (see Roadmap)."
        },
        "q3": {
          "question": "Is a transition to a microservice architecture planned?",
          "answer": "Yes, the transition to microservices is part of the long-term development strategy (Principle 8). It is planned in stages, starting from Q1 2026, using the Strangler Pattern approach. This will allow components to be scaled independently, increasing fault tolerance and flexibility (see Microservice Migration Plan)."
        }
      },
      "challengesOpportunitiesLimitations": {
        "q1": {
          "question": "What are the main technical challenges (pitfalls) in the project?",
          "answer": "*   Implementing reliable real-time functionality (WebSockets): Managing thousands of simultaneous connections, reliable message delivery, managing online/offline status.\n*   Scaling the database with large data volumes: Managing the growth of the messages table (partitioning), optimizing complex queries.\n*   Handling and delivering files: Efficient uploading, image optimization, secure downloading from Cloudflare R2.\n*   Transitioning to microservices: Increased operational complexity, configuring inter-service communication (Kafka, GraphQL Federation), data migration.\n*   Maintaining high quality and performance: Continuous optimization at all levels (Backend, Frontend, Infrastructure) as load and functionality grow."
        },
        "q2": {
          "question": "What opportunities and advantages does the project's architecture and stack provide?",
          "answer": "*   High scalability: The chosen technologies (NestJS, Kubernetes, Kafka, Redis, Neon, R2) allow the application to be scaled horizontally to support a large number of users.\n*   Reliability and fault tolerance: Using reliable services, asynchronous processing (Kafka), monitoring, and, in the future, microservices increases the system's resilience to failures.\n*   High performance: GraphQL, caching, query optimization, asynchronous processing contribute to the application's fast operation.\n*   Cross-platform compatibility: React Native and Next.js allow creating applications for all major platforms from a single codebase (for UI).\n*   Code quality and maintainability: TypeScript, NestJS, Prisma, coding standards, testing simplify development and reduce the number of defects.\n*   Cost-effectiveness (at the start): Using free/affordable tiers (Neon, R2) and proven open-source solutions.\n*   Rich ecosystem: Using popular technologies with a large community and many ready-made libraries."
        },
        "q3": {
          "question": "What are the project's limitations at the current stage (MVP)?",
          "answer": "*   Limited set of features compared to the vision (no calls, Premium, enhanced security).\n*   Limited multilingualism and accessibility options (expansion planned).\n*   The architecture is currently monolithic, which imposes limitations on independent scaling of individual parts.\n*   There may be performance limitations under load significantly exceeding the target for MVP (~1000 simultaneous users) before implementing deep optimizations and microservices."
        }
      },
      "learnMoreContribute": {
        "q1": {
          "question": "Where can I get more detailed information about the project?",
          "answer": "All detailed documentation is available in the repository. We strive to make it as complete and up-to-date as possible:\n\n*   [Requirements Documentation](link): What we are building.\n*   [Development Guide](link): How we write code.\n*   [Technical Documentation](link): Architecture and stack.\n*   [API Specification](link): Component interaction.\n*   [Integrations Documentation](link): External services.\n*   [Security Guide](link): Protecting the ASSET.\n*   [Performance Guide](link): How to make the system fast.\n*   [Monitoring and Logging Guide](link): State visibility.\n*   [UI Documentation](link): Visual design.\n*   [Sound Documentation](link): Audio system.\n*   [Support and Maintenance Guide](link): Life after release.\n*   [Error Specification](link): Handling failures.\n*   [Testing Guide](link): Quality assurance.\n*   [Microservice Migration Plan](link): Evolution strategy.\n*   [MVP Requirements Guide](link): MVP details.\n\n(Ensure all [link] point to the corresponding files in your repository)"
        },
        "q2": {
          "question": "How can I join the project development or contribute?",
          "answer": "We welcome contributions to building this digital ASSET (Principle 10)! You can contribute in various ways: code, design/UX suggestions, documentation improvements, testing assistance. Please refer to the [Contribution Guide](CONTRIBUTING.md) (if available). Your participation is part of the Power of Assistance (Margulan's principle) that makes the project stronger."
        },
        "q3": {
          "question": "Where can I ask additional questions?",
          "answer": "If you have questions not covered by this documentation, please use the Issues section in the GitHub repository."
        }
      }
    },
    "answerComingSoon": "Answer coming soon..."
  },
  "poll": {
    "pollTitle": "Community Poll",
    "pollSubtitle": "Share your opinion",
    "submit": "Submit",
    "results": "View Results"
  },
  "updates": {
    "pageTitle": "Latest Updates",
    "pageSubtitle": "Stay informed about our latest features and improvements",
    "impactTitle": "Impact & Case Studies",
    "allUpdatesTitle": "All Updates",
    "modal": {
      "keyFeaturesTitle": "Key Features",
      "impactMetricsTitle": "Impact Metrics",
      "featureOverviewTitle": "Feature Overview",
      "additionalInfoTitle": "Additional Information",
      "placeholder": "......"
    },
    "caseStudy": {
      "title": "It's coming soon...",
      "description": "At this juncture, the project is only about to commence its launch. Participants will receive updates via notifications and look forward to advancements and project initiation.",
      "metricPlaceholder": "....."
    },
    "items": {
      "enhancedChatExperience": {
        "title": "Enhanced Chat Experience",
        "description": "New chat features including message reactions, improved file sharing, and real-time translation capabilities.",
        "date": "December 14, 2024"
      },
      "securityUpdates": {
        "title": "Security Updates",
        "description": "Advanced encryption protocols and enhanced privacy controls to keep your conversations secure.",
        "date": "December 10, 2024"
      },
      "mobileAppRedesign": {
        "title": "Mobile App Redesign",
        "description": "Completely redesigned mobile interface for better usability and performance.",
        "date": "December 5, 2024"
      },
      "globalAvailability": {
        "title": "Global Availability",
        "description": "Now available in 50+ countries with local language support and regional features.",
        "date": "November 28, 2024"
      },
      "performanceBoost": {
        "title": "Performance Boost",
        "description": "Significant improvements in message delivery speed and app responsiveness.",
        "date": "November 20, 2024"
      },
      "aiFeaturesIntegration": {
        "title": "AI Features Integration",
        "description": "Smart replies, content suggestions, and automated message organization powered by AI.",
        "date": "November 15, 2024"
      },
      "twoFactorAuthentication": {
        "title": "Two-Factor Authentication",
        "description": "Added support for various 2FA methods including authenticator apps and biometric verification.",
        "date": "November 8, 2024"
      },
      "customThemes": {
        "title": "Custom Themes",
        "description": "Personalize your chat experience with new theme options and custom color schemes.",
        "date": "November 1, 2024"
      }
    }
  },
  "docs": {
    "design": {
      "title": "BrainMessenger Design Documentation",
      "subtitle": "Quality and Value System",
      "section1": {
        "title": "1. Introduction: Design as the Foundation of Value",
        "name": "BrainMessenger Design System",
        "description": "This design system defines the visual and functional standards for the BrainMessenger interface. Our goal is to create an interface that not only looks good but is also <strong>intuitive, efficient, and accessible</strong> (Principle 2: Value Creation), based on the principles of <strong>quality > quantity</strong> (Principle 3) and <strong>pragmatism</strong> (Principle 12) in decision-making.",
        "goal": "To ensure <strong>consistency, reliability, and a positive user experience</strong> across all platforms (Windows, Android, web), making BrainMessenger a <strong>useful ASSET</strong> (Principle 10) for users.",
        "principles_title": "Principles guiding the design:",
        "principles": [
          "<strong>Value Creation (Principle 2):</strong> Design must be functional and solve user problems as conveniently and efficiently as possible.",
          "<strong>Quality > Quantity (Principle 3):</strong> Focus on the refinement of key elements, not on a multitude of poorly thought-out details. The design must be <strong>reliable</strong> and <strong>well-designed</strong>.",
          "<strong>Pragmatism and Realism (Principle 12):</strong> Choosing design solutions that are feasible given technical constraints (e.g., optimizing animations).",
          "<strong>Integrity (Principle 7):</strong> Visual and functional integrity across all platforms.",
          "<strong>Health as a Foundation (Principle 5):</strong> Attention to accessibility (WCAG) so that the design does not create excessive burden (visual, cognitive) on the user."
        ]
      },
      "section2": {
        "title": "2. Color Palette: The Visual Language of BrainMessenger",
        "intro": "Colors are separated for Light and Dark modes, supporting theme switching (\"Night Mode\" function). All colors are specified in HEX.",
        "light_mode_title": "2.1. Light Mode",
        "light_mode_table": [
          ["Category", "Color (HEX)", "Purpose"],
          ["<strong>Primary Gradient</strong>", "`#A7F43A` → `#00C853`", "Main gradient for accent elements (\"Get Started\" buttons, icons)"],
          ["<strong>Accent</strong>", "`#FF6347`", "Accent elements (errors, important notifications)"],
          ["<strong>Secondary</strong>", "`#00BFFF`", "Secondary buttons, links, interactive elements"],
          ["<strong>Success</strong>", "`#96C93D`", "Confirmations, successful actions"],
          ["<strong>Background</strong>", "`#FFFFFF`", "Main background"],
          ["<strong>Surface</strong>", "`#F0F0F0`", "Cards, panels, message backgrounds"],
          ["<strong>Text Primary</strong>", "`#333333`", "Primary text"],
          ["<strong>Text Secondary</strong>", "`#4D4D4D`", "Secondary text, hints, metadata"],
          ["<strong>Disabled</strong>", "`#B0B0B0`", "Inactive elements"],
          ["<strong>Border</strong>", "`#E8E8D9`", "Borders, separators"]
        ],
        "dark_mode_title": "2.2. Dark Mode",
        "dark_mode_table": [
          ["Category", "Color (HEX)", "Purpose"],
          ["<strong>Primary Gradient</strong>", "`#F2F047` → `#1ED94F`", "Main gradient for accent elements"],
          ["<strong>Accent</strong>", "`#FF6347`", "Accent elements (errors)"],
          ["<strong>Secondary</strong>", "`#00BFFF`", "Secondary buttons, links"],
          ["<strong>Success</strong>", "`#96C93D`", "Confirmations, successful actions"],
          ["<strong>Background</strong>", "`#1A1A1A`", "Main background"],
          ["<strong>Surface</strong>", "`#333333`", "Cards, panels, message backgrounds"],
          ["<strong>Text Primary</strong>", "`#FFFFFF`", "Primary text"],
          ["<strong>Text Secondary</strong>", "`#D9E8D9`", "Secondary text, hints"],
          ["<strong>Disabled</strong>", "`#4D4D4D`", "Inactive elements"],
          ["<strong>Border</strong>", "`#B0B0B0`", "Borders, separators"]
        ],
        "premium_colors_title": "2.3. Premium Feature Colors (Visual Highlighting of Value)",
        "premium_colors": [
          "<strong>Premium Accent:</strong> `#FFD600` (Gold)",
          "<strong>Premium Secondary:</strong> `#2196F3` (Blue)",
          "Used for visual highlighting of premium features (e.g., in neural network animations, special UI elements), emphasizing their <strong>additional value</strong> (Principle 2, 10)."
        ],
        "color_application_title": "2.4. Color Application (Examples)",
        "color_application": [
          {
            "title": "Welcome Screen (from screenshot):",
            "items": [
              "Background: `#1A1A1A` (Dark Mode).",
              "\"Get Started\" Button: Gradient `#F2F047` → `#1ED94F`.",
              "Chat Icon: `#F2F047` (outline) with a white symbol inside.",
              "Text: `#FFFFFF` (Welcome to Brain Messenger), `#D9E8D9` (hint)."
            ]
          },
          {
            "title": "Theme Switching:",
            "items": [
              "Implemented via a global `themeMode` flag (`Light`/`Dark`).",
              "Example in React Native:\n```jsx\nimport { useColorScheme } from 'react-native'\nconst themeMode = useColorScheme() === 'dark' ? 'Dark' : 'Light'\nconst backgroundColor = themeMode === 'Dark' ? '#1A1A1A' : '#FFFFFF' // Example of background selection\n```"
            ]
          }
        ],
        "usage_recommendations_title": "2.5. Color Usage Recommendations",
        "usage_recommendations": [
          "<strong>Gradients:</strong> Use `#A7F43A` → `#00C853` or `#F2F047` → `#1ED94F` (depending on the theme) for key actions and accent elements that draw attention to <strong>value</strong> (Principle 2).",
          "<strong>Dark Theme:</strong> Use `#1A1A1A` or `#212121` as the main background to reduce eye strain (related to Principle 5: Health).",
          "<strong>Contrast:</strong> Always check the contrast of text and elements to ensure <strong>accessibility</strong> (WCAG 2.1 AA) and compliance with Principle 7 (Integrity). Use tools like WebAIM Contrast Checker."
        ]
      },
      "section3": {
        "title": "3. Typography: Readability as the Basis of Efficiency",
        "intro": "The choice and application of fonts are based on ensuring maximum readability and accessibility, which is critically important for effective information absorption and reducing cognitive load (related to Principle 5: Health and Principle 2: Value).",
        "primary_font_title": "3.1. Primary Font",
        "primary_font": [
          "<strong>Family:</strong> Roboto (Google Fonts)",
          "<strong>Fallback:</strong> Sans-serif",
          "<strong>Reason:</strong> High readability on different screen sizes, broad character support (multilingualism), open license, and availability."
        ],
        "sizes_styles_title": "3.2. Sizes and Styles (Hierarchy Scale)",
        "sizes_styles_table": [
          ["Level", "Size", "Weight", "Usage"],
          ["H1 (Heading)", "24px", "Bold", "Main screen titles (e.g., \"Chats\")"],
          ["H2 (Subheading)", "18px", "Medium", "Secondary titles, group names"],
          ["Body", "16px", "Regular", "Main message text, chat list"],
          ["Caption", "14px", "Regular", "Photo captions, message time, small text"],
          ["Button", "16px", "Medium", "Action button text"]
        ],
        "notes_title": "Notes:",
        "notes": [
          "<strong>Line Height:</strong> Minimum 1.5 for body text to improve readability.",
          "<strong>Customization (Principle 2):</strong> The user can choose an alternative font in settings (e.g., Open Sans) to adapt to their preferences.",
          "<strong>Accessibility:</strong> Ensuring contrast and minimum font size to comply with WCAG."
        ]
      },
      "section4": {
        "title": "4. Animations: Optimization and Meaning (Principle 12: Pragmatism)",
        "intro": "Animations in BrainMessenger are used to enhance user experience, provide visual feedback, and make the interface lively. However, they must be <strong>pragmatic, optimized</strong> (<2 ГБ RAM), and <strong>not create excessive burden</strong> (related to Principle 5: Health).",
        "principles_title": "4.1. Animation Principles",
        "principles": [
          "<strong>Meaning:</strong> Every animation should have a clear purpose – to explain a transition, draw attention to something important, confirm an action.",
          "<strong>Smoothness:</strong> Using `ease-in-out` or `ease-out` for natural movement.",
          "<strong>Optimization:</strong> Animations should not slow down the interface or consume excessive resources. Duration is chosen for a balance between smoothness and speed.",
          "<strong>Accessibility:</strong> Avoiding overly fast or flashing animations that can cause discomfort or seizures in sensitive users."
        ],
        "list_title": "4.2. List of Animations (Examples)",
        "list_table": [
          ["Name", "Description", "Trigger", "Parameters", "Related Principles", "Colors (Light/Dark)"],
          ["Slide Transition", "Sliding of slides (Welcome Screen)", "Swipe/click on arrow", "0.3 sec, slide left/right", "P2 (Onboarding)", "#96C93D / #96C93D"],
          ["Chat Opening", "Chat appears from bottom up", "Click on chat in list", "0.3 sec, ease-in-out", "P2 (Navigation)", "#00BFFF / #00BFFF"],
          ["Button Press", "Visual feedback on click (scaling down)", "Click on button", "0.2 sec, scale", "P2 (Feedback)", "Gradient #F2F047→#1ED94F"],
          ["Message Sending", "Message appears with smooth fade-in", "Click \"Send\"", "0.3 sec, fade-in", "P2 (Feedback)", "#96C93D / #96C93D"],
          ["Screen Transition", "Screen slides left/right (basic navigation)", "Navigation", "0.3 sec, slide", "P2 (Navigation)", "#B0B0B0 / #4D4D4D"],
          ["Icon Animation (Morph)", "Icon transformation (e.g., mute → unmute)", "Click (state toggle)", "0.4 sec, morph", "P2 (State)", "#FF6347 / #FF6347"],
          ["Ripple Effect on Press", "Radial waves from press point (feedback)", "Click on button/element", "0.3 sec, ripple", "P2 (Feedback)", "#F2F047 / #F2F047"],
          ["Glitch Effect (Premium)", "Text distortion for premium (visualization)", "Subscription activation", "0.2 sec, glitch", "P2, P10 (Highlighting)", "#FF6347 / #FF6347"],
          ["Neural Connections (Premium)", "Pulsating lines (Asset visualization)", "Premium screen", "0.5 sec, pulse", "P2, P10 (Highlighting)", "#96C93D / #96C93D"]
        ],
        "implementation_examples_title": "4.3. Implementation Examples (Code Snippets)",
        "css_ripple_title": "CSS for Ripple Effect:",
        "css_ripple_code": ".ripple {\n  background: linear-gradient(45deg, #F2F047, #1ED94F); /* Or other colors/gradient */\n  border-radius: 50%;\n  animation: ripple 0.3s ease-out;\n}\n@keyframes ripple {\n  to { transform: scale(2); opacity: 0; }",
        "rn_icon_title": "React Native for Animated Icon:",
        "rn_icon_code": "import Animated from 'react-native-reanimated'; // Example library\nimport Icon from 'react-native-vector-icons/MaterialIcons'; // Example library\n\nconst color = themeMode === 'Dark' ? '#FFFFFF' : '#333333';\n// Creating an animated Icon component\nconst AnimatedIcon = Animated.createAnimatedComponent(Icon);\n\n// Example usage with scale animation (assuming 'scale' is an Animated.Value)\n<AnimatedIcon name=\"volume-up\" color={color} style={{ transform: [{ scale: scale }] }} />"
      },
      "section5": {
        "title": "5. Alignment and Grid: Structure and Order (Principle 9: System)",
        "intro": "Using a consistent alignment system and modular grid is the foundation for creating a <strong>systematic, easily maintainable, and visually harmonious</strong> interface (Principle 9: System).",
        "base_grid": "<strong>Base Grid:</strong> 8px (base step for defining element sizes, padding, intervals). All values should be multiples of 8 (or 4 for very small elements).",
        "alignment_title": "<strong>Alignment:</strong>",
        "alignment": [
          "The principle of <strong>visual hierarchy</strong> is used: more important elements are placed higher or visually dominate.",
          "<strong>Vertical Flow:</strong> Content on screens is organized from top to bottom: Title → Input Field → Action Button.",
          "<strong>Horizontal Alignment:</strong> Elements in containers are aligned to the left (for LTR) or right (for RTL) unless centering is necessary (e.g., headers in the top bar).",
          "<strong>Padding/Margin:</strong> Values from the scale, multiples of 8px (8, 16, 24, 32, 40, 48 px, etc.), are used to create clear intervals between elements and groups of elements."
        ],
        "adaptability_title": "<strong>Adaptability and Responsiveness:</strong>",
        "adaptability": [
          "The design adapts to different screen sizes to ensure <strong>value</strong> (Principle 2) on any device.",
          "<strong>Mobile Devices:</strong> 320px–767px (Usually a single-column layout).",
          "<strong>Tablets:</strong> 768px–1023px (Possibly a two-column layout, side panels).",
          "<strong>Desktop:</strong> 1024px+ (Wide layout, multi-column design, side panels)."
        ]
      },
      "section6": {
        "title": "6. Accessibility Principles (WCAG 2.1 AA): Design for All (Principle 5: Health, Principle 7: Integrity)",
        "intro": "<strong>Accessibility is not an option, but a fundamental requirement</strong> (similar to Principle 5: Health as a Foundation) for creating a <strong>holistic</strong> (Principle 7) and <strong>valuable</strong> (Principle 2) product that can be used by everyone, regardless of their abilities or the technologies they use. We strive to comply with WCAG 2.1 AA level.",
        "principles": [
          "<strong>Color Contrast:</strong> Text elements must have a minimum contrast of 4.5:1 (for normal text) and 3:1 (for large text or icons) relative to the background. This is checked for both themes (Light/Dark).",
          "<strong>Keyboard Navigation:</strong> All interactive elements (buttons, links, input fields) must be accessible for keyboard navigation (Tab, Shift+Tab) and activation (Enter, Space).",
          "<strong>Screen Reader Support:</strong> Using semantic markup (HTML) and ARIA attributes to provide context and information to screen reader users (e.g., descriptions for icons, element states).",
          "<strong>Visual Focus Indicator:</strong> There must be a clear and visible indicator of the currently focused element for keyboard users (e.g., a blue outline `#007BFF`).",
          "<strong>Error Handling:</strong> Error messages must be clear, understandable, and easily identifiable by users, including screen reader users.",
          "<strong>RTL Support (Right-to-Left):</strong> The design adapts for languages with right-to-left writing direction (e.g., Arabic), including mirroring the layout, icons, and text (see DocLocIn.md)."
        ]
      },
      "section7": {
        "title": "7. Notes and Recommendations",
        "notes": [
          "<strong>User Customization:</strong> Remember that some aspects of the design (chat colors, fonts) can be changed by the user in settings. The design system must account for this flexibility.",
          "<strong>Testing on Real Devices:</strong> All design components must be tested on a variety of devices, with different screen resolutions and in different lighting conditions, to ensure their effectiveness and accessibility.",
          "<strong>Living Documentation:</strong> This design system is a living document. It will be supplemented with new components, templates, and recommendations as the product develops, reflecting the principles of <strong>continuous improvement</strong> (Principle 1) and a <strong>systemic approach</strong> (Principle 9).",
          "<strong>Design as part of the Kaizen Process:</strong> Design decisions are analyzed and improved based on feedback and real-world usage, integrating into the overall Kaizen process (Principle 9, 14)."
        ]
      }
    }
  },
  "common": {
    "loading": "Loading...",
    "error": "An error occurred. Please try again.",
    "noData": "No data available.",
    "retry": "Retry",
    "seeAll": "See All",
    "backToHome": "Back to Home"
  },
  "roadmap": {
    "title": {
      "section": "Development Roadmap",
      "projectLaunch": "Project Launch",
      "enhancedSecurity": "Enhanced Security & Features",
      "advancedCollaboration": "Advanced Collaboration Tools",
      "mobileEnhancement": "Mobile Enhancement",
      "aiIntegration": "AI Integration",
      "globalExpansion": "Global Expansion",
      "enterpriseSolutions": "Enterprise Solutions",
      "futureInnovation": "Future Innovation"
    },
    "subtitle": {
      "section": "Our journey to revolutionize secure messaging"
    },
    "date": {
      "jan2024": "January 2024",
      "mar2024": "March 2024",
      "jun2024": "June 2024",
      "sep2024": "September 2024",
      "nov2024": "November 2024",
      "jan2025": "January 2025",
      "mar2025": "March 2025",
      "jun2025": "June 2025",
      "beyond2025": "Beyond 2025"
    },
    "description": {
      "projectLaunch": "Initial release of BrainMessenger with core messaging functionality",
      "enhancedSecurity": "Major security upgrades and new feature implementations",
      "advancedCollaboration": "Introduction of team collaboration features",
      "mobileEnhancement": "Focus on mobile experience and performance",
      "aiIntegration": "Implementation of AI-powered features",
      "globalExpansion": "Focus on international markets and localization",
      "enterpriseSolutions": "Dedicated features for enterprise clients",
      "futureInnovation": "Continuous innovation and feature expansion"
    },
    "features": {
      "secureMessagingInfrastructure": "Secure messaging infrastructure",
      "crossPlatformCompatibility": "Cross-platform compatibility",
      "basicUserInterface": "Basic user interface",
      "endToEndEncryption": "End-to-end encryption",
      "twoFactorAuthentication": "Two-factor authentication",
      "fileSharingCapabilities": "File sharing capabilities",
      "teamWorkspaces": "Team workspaces",
      "realTimeCollaboration": "Real-time collaboration",
      "advancedFileSharing": "Advanced file sharing",
      "nativeMobileApps": "Native mobile apps",
      "offlineFunctionality": "Offline functionality",
      "pushNotifications": "Push notifications",
      "smartMessageCategorization": "Smart message categorization",
      "automatedResponses": "Automated responses",
      "contentAnalysis": "Content analysis",
      "multiLanguageSupport": "Multi-language support",
      "regionalDataCenters": "Regional data centers",
      "culturalAdaptations": "Cultural adaptations",
      "advancedAdminControls": "Advanced admin controls",
      "customIntegrations": "Custom integrations",
      "enterpriseSupport": "Enterprise support",
      "emergingTechnologies": "Emerging technologies",
      "communityDrivenFeatures": "Community-driven features",
      "platformExpansion": "Platform expansion"
    },
    "status": {
      "completed": "completed",
      "inProgress": "in-progress",
      "upcoming": "upcoming"
    },
    "iconAlt": {
      "projectLaunch": "Project Launch icon",
      "enhancedSecurity": "Enhanced Security icon",
      "advancedCollaboration": "Advanced Collaboration icon",
      "mobileEnhancement": "Mobile Enhancement icon",
      "aiIntegration": "AI Integration icon",
      "globalExpansion": "Global Expansion icon",
      "enterpriseSolutions": "Enterprise Solutions icon",
      "futureInnovation": "Future Innovation icon"
    }
  },
  "footer": {
    "sectionTitle": {
      "brand": "Brain Messenger",
      "quickLinks": "Quick Links",
      "contact": "Contact Us",
      "social": "Follow Us"
    },
    "brandContent": "Connecting minds by empowering communication through innovative messaging solutions",
    "quickLinks": {
      "home": "Home",
      "features": "Features",
      "news": "News",
      "roadmap": "Roadmap",
      "faq": "FAQ",
      "doc": "Doc"
    },
    "iconAlt": {
      "quickLinks": "Quick Links icon",
      "email": "Email icon"
    },
    "social": {
      "twitter": "Twitter",
      "linkedin": "LinkedIn"
    },
    "previousSection": "Previous section",
    "nextSection": "Next section",
    "copyright": "2024 Brain Messenger. All rights reserved."
  }
}
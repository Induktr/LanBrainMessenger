{
  "header": {
    "features": "Features",
    "news": "News",
    "faq": "FAQ",
    "faqLink": "FAQ",
    "docs": "Docs",
    "updates": "Updates",
    "selectLanguage": "Select language",
    "changeLanguageTooltip": "Change language",
    "lightMode": "Light Mode",
    "darkMode": "Dark Mode",
    "openMenu": "Open menu",
    "closeMenu": "Close menu",
    "settings": "Settings",
    "signOut": "Sign Out",
    "deleteAccount": "Delete Account",
    "deleteAccountConfirmTitle": "Confirm Account Deletion",
    "deleteAccountConfirmMessage": "Are you sure you want to delete your account? This action cannot be undone.",
    "cancel": "Cancel",
    "confirmDelete": "Confirm Deletion",
    "signIn": "Sign In"
  },
  "hero": {
    "title": "Welcome to BrainMessenger",
    "subtitle": "Your Smart Communication Platform",
    "getStarted": "Get Started",
    "learnMore": "Learn More",
    "connectSmarterTitle": "Connect Smarter with BrainMessenger",
    "connectSmarterSubtitle": "Experience the next generation of messaging with advanced features, unparalleled security, and seamless communication across all your devices.",
    "downloadButton": "Download",
    "downloadWindows": "Download for Windows",
    "downloadAndroid": "Download for Android"
  },
  "features": {
    "featuresTitle": "Key Features",
    "featuresSubtitle": "Discover what makes us unique",
    "secureMessaging": "Secure Messaging",
    "secureMessagingDesc": "End-to-end encryption for your privacy",
    "smartAssistant": "Smart Assistant",
    "smartAssistantDesc": "AI-powered help at your fingertips",
    "crossPlatform": "Cross Platform",
    "crossPlatformDesc": "Use on any device, anywhere",
    "groupChats": "Group Chats",
    "groupChatsDesc": "Connect with multiple people at once",
    "privacyFirst": "Privacy First",
    "privacyFirstDesc": "Your data is yours, always"
  },
  "news": {
    "latestNews": "Latest news",
    "readMore": "Read More"
  },
  "faq": {
    "title": "Frequently Asked Questions",
    "subtitle": "Find answers to common questions about BrainMessenger",
    "searchAlt": "Search icon",
    "searchPlaceholder": "Search questions...",
    "allQuestions": "All Questions",
    "noResults": "No questions found matching your search.",
    "categories": {
      "general": "General",
      "technical": "Technical",
      "security": "Security",
      "pricing": "Pricing",
      "generalProject": "General Project Questions",
      "technicalQuestions": "Technical Questions",
      "developmentProcesses": "Development Processes",
      "statusRoadmapFuture": "Status, Roadmap, and Future",
      "challengesOpportunitiesLimitations": "Challenges, Opportunities, and Limitations",
      "learnMoreContribute": "Learn More and Contribute"
    },
    "questionsData": {
      "generalProject": {
        "q1": {
          "question": "What is the main idea behind BrainMessenger? What makes it special?",
          "answer": "BrainMessenger is not just another messenger. Our main idea is to create a Digital ASSET (Principle 10) that simplifies complex interaction (Margulan Seisembayev's principle) and serves as a reliable tool for effective communication. We are focused on quality (Principle 3), security (Principle 5), and reliability (Principle 3), not just a set of features. We are building a SYSTEM (Principle 9) that reflects our principles and is constantly improving."
        },
        "q2": {
          "question": "What key principles underpin the development of BrainMessenger?",
          "answer": "The project is based on a set of 15 key principles (see My Key Principles), inspired by Margulan Seisembayev and IT industry best practices. The most important ones influencing code and processes are: Continuous Learning (Principle 1), Value Creation (Principle 2), Quality > Quantity (Principle 3), System and Optimization (Kaizen, Principle 9), Long-Term Thinking (Principle 8), Pragmatism and Realism (Principle 12), Persistence (Principle 13), Bias for Action (Principle 15). We strive for these principles to permeate all aspects of the project."
        },
        "q3": {
          "question": "Who is behind the project? Is it an open community or a team?",
          "answer": "Currently, the project is at an early stage and is actively being developed by one person (you), who is the driving force and bears responsibility (Principle 6) for its construction. In the future, it is planned to attract contributors and possibly form a team. The project is open for contributions (see CONTRIBUTING.md)."
        }
      },
      "technicalQuestions": {
        "q1": {
          "question": "Why was this particular technology stack chosen (TypeScript, NestJS, React/RN, PostgreSQL/Neon, GraphQL, Kafka, Redis, Cloudflare R2, etc.)?",
          "answer": "The choice of stack is based on pragmatism (Principle 12), long-term thinking (Principle 8), and the pursuit of quality (Principle 3) and scalability (NFR-14, NFR-15).\n*   TypeScript: Increases code reliability and maintainability through strong typing.\n*   NestJS: Provides a powerful, modular architecture for the Backend, simplifying the construction of scalable applications.\n*   React/React Native/Next.js: Allow building UI for different platforms from a single codebase (cross-platform) and provide good performance.\n*   PostgreSQL (Neon): A reliable, proven relational database with extensive scaling and optimization capabilities. Neon as a managed service reduces operational overhead (Pragmatism).\n*   Prisma: Chosen as a reliable ORM, providing type safety and built-in protection against SQL injection (Quality, Security).\n*   GraphQL: Allows clients to request only the data they actually need with a single query, optimizing network interaction (especially for mobile clients) and reducing data redundancy compared to REST. GraphQL also simplifies fetching related data (solving N+1 problems with DataLoader).\n*   Kafka: Chosen for reliable asynchronous task processing, which is critical for scalability and fault tolerance.\n*   Redis: High-performance In-memory store for caching, Rate Limiting, and real-time state management.\n*   Cloudflare R2: Object storage with very favorable terms (no egress fees), ideal for storing user files (Pragmatism, ASSET).\n\nThis stack allows laying a solid technical foundation (Principle 8) for future development."
        },
        "q2": {
          "question": "Why is a monolithic architecture used at the start, rather than microservices immediately?",
          "answer": "Using a monolithic architecture at the start (MVP) is a pragmatic and realistic decision (Principle 12). It allows for rapid development and iteration of basic functionality, minimizing complexity at an early stage when the team is small. Launching the MVP is more important than building an overly complex architecture. Once the MVP will be completed and the project starts to grow, a phased transition to microservices is planned (see Microservice Migration Plan)."
        },
        "q3": {
          "question": "What approaches are used to ensure security?",
          "answer": "Security is a fundamental aspect (Principle 5) and a priority (see Security Guide).\n*   Data encryption in transit (TLS 1.2+) and at rest (AES for sensitive data, encryption in R2).\n*   Strong password hashing (bcrypt/argon2).\n*   Using Prisma to prevent SQL injection.\n*   Validation of all input data on the Backend.\n*   Two-factor authentication (2FA) via email.\n*   Rate Limiting to protect against brute-force and DDoS attacks.\n*   Regular vulnerability scanning.\n*   Storing secrets in secure locations (Kubernetes Secrets)."
        },
        "q4": {
          "question": "How is real-time functionality implemented (message exchange)?",
          "answer": "Real-time functionality (message exchange) is implemented using WebSockets. The Backend (NestJS Gateway) manages WebSocket connections, and clients subscribe to chat events. Message delivery occurs via WebSocket. For scaling WebSockets in a microservice architecture, Redis Pub/Sub or Kafka will be used."
        },
        "q5": {
          "question": "Why is GraphQL used instead of REST API?",
          "answer": "GraphQL allows clients to request only the data they actually need with a single query. This optimizes network interaction (especially for mobile clients) and reduces data redundancy compared to REST. GraphQL also simplifies fetching related data (solving N+1 problems with DataLoader)."
        },
        "q6": {
          "question": "How are large volumes of data and files managed?",
          "answer": "*   Structured data (messages, users, chats): Stored in PostgreSQL (Neon). Indexes and query optimization (Prisma) are used for fast retrieval. As it grows, table partitioning and database replication are planned.\n*   Unstructured data (files, images): Stored in Cloudflare R2. Asynchronous processing (Kafka) is used for image optimization before uploading. R2 is chosen for scalability and favorable traffic rates."
        }
      },
      "developmentProcesses": {
        "q1": {
          "question": "What is the approach to project and task management?",
          "answer": "The project is managed using a planning system (see My Planning System 2025-2026) in Notion. Global goals are decomposed into stages (Roadmap), weekly planning, and a task tracker are used. An important element is the Kaizen Hour (Principle 9) for daily reflection, analyzing bottlenecks, and finding ways to improve."
        },
        "q2": {
          "question": "How is code quality ensured?",
          "answer": "Code quality is ensured through systematic approaches (Principle 3, 9):\n*   Using TypeScript with strict typing.\n*   Adhering to coding standards (ESLint, Prettier).\n*   Code review of all changes.\n*   Automated testing at different levels (Unit, Integration, E2E).\n*   Continuous Integration (CI) for automatic code and test checks on every commit/PR."
        },
        "q3": {
          "question": "What testing strategy is used?",
          "answer": "A multi-level testing strategy is used (see Testing Guide), combining manual and automated testing: Unit, Integration, API, E2E, Load, Security, Regression. Tests are integrated into CI/CD. The focus is on verifying key requirements (FRs, NFRs)."
        },
        "q4": {
          "question": "How are errors handled?",
          "answer": "Errors are handled centrally and uniformly on the Backend (NestJS Exception Filters) and converted to a standard API response format with codes (extensions.code). On the Frontend, errors are processed based on these codes, displaying a clear message to the user and suggesting an action. All errors are thoroughly logged (Winston → ELK) and sent to Sentry for tracking and analysis (see Error Specification, Monitoring Guide)."
        },
        "q5": {
          "question": "How is the project deployed?",
          "answer": "Deployment is automated through a CI/CD pipeline (GitHub Actions). Docker is used for containerization and Kubernetes for orchestration in the cloud. Infrastructure is described as code (Terraform). The process includes automatic build, testing, image publishing, and Rolling Updates in Kubernetes for zero-downtime deployment (see Deployment Guide)."
        },
        "q6": {
          "question": "How is the system monitored in production?",
          "answer": "The monitoring system is the eyes and ears of the project (Principle 9, 5). The following are used:\n*   Prometheus for collecting performance and resource metrics.\n*   Grafana for visualizing metrics and dashboards.\n*   Sentry for tracking application errors (Frontend and Backend).\n*   ELK Stack (or Kibana with Winston) for centralized logging and analysis.\n*   Alertmanager for configuring automatic alerts about problems.\nThese tools allow for proactive problem identification and optimization (see Monitoring Guide)."
        }
      },
      "statusRoadmapFuture": {
        "q1": {
          "question": "What is the current status of the project?",
          "answer": "The project is in the active development phase of the Minimum Viable Product (MVP). The main technological foundation has been laid, key UI elements and basic security have been implemented. The core messaging, file handling, and group/channel creation are in progress. (See BrainMessenger Project Requirements (MVP) Guide)."
        },
        "q2": {
          "question": "What are the next steps after completing the MVP?",
          "answer": "After completing the MVP, the next steps include adding advanced functions (audio/video calls, Premium, extended security, full set of animations and localization), further performance optimization, and preparing for scaling. A detailed plan is presented in the BrainMessenger Roadmap (see Roadmap)."
        },
        "q3": {
          "question": "Is a transition to a microservice architecture planned?",
          "answer": "Yes, the transition to microservices is part of the long-term development strategy (Principle 8). It is planned in stages, starting from Q1 2026, using the Strangler Pattern approach. This will allow components to be scaled independently, increasing fault tolerance and flexibility (see Microservice Migration Plan)."
        }
      },
      "challengesOpportunitiesLimitations": {
        "q1": {
          "question": "What are the main technical challenges (pitfalls) in the project?",
          "answer": "*   Implementing reliable real-time functionality (WebSockets): Managing thousands of simultaneous connections, reliable message delivery, managing online/offline status.\n*   Scaling the database with large data volumes: Managing the growth of the messages table (partitioning), optimizing complex queries.\n*   Handling and delivering files: Efficient uploading, image optimization, secure downloading from Cloudflare R2.\n*   Transitioning to microservices: Increased operational complexity, configuring inter-service communication (Kafka, GraphQL Federation), data migration.\n*   Maintaining high quality and performance: Continuous optimization at all levels (Backend, Frontend, Infrastructure) as load and functionality grow."
        },
        "q2": {
          "question": "What opportunities and advantages does the project's architecture and stack provide?",
          "answer": "*   High scalability: The chosen technologies (NestJS, Kubernetes, Kafka, Redis, Neon, R2) allow the application to be scaled horizontally to support a large number of users.\n*   Reliability and fault tolerance: Using reliable services, asynchronous processing (Kafka), monitoring, and, in the future, microservices increases the system's resilience to failures.\n*   High performance: GraphQL, caching, query optimization, asynchronous processing contribute to the application's fast operation.\n*   Cross-platform compatibility: React Native and Next.js allow creating applications for all major platforms from a single codebase (for UI).\n*   Code quality and maintainability: TypeScript, NestJS, Prisma, coding standards, testing simplify development and reduce the number of defects.\n*   Cost-effectiveness (at the start): Using free/affordable tiers (Neon, R2) and proven open-source solutions.\n*   Rich ecosystem: Using popular technologies with a large community and many ready-made libraries."
        },
        "q3": {
          "question": "What are the project's limitations at the current stage (MVP)?",
          "answer": "*   Limited set of features compared to the vision (no calls, Premium, enhanced security).\n*   Limited multilingualism and accessibility options (expansion planned).\n*   The architecture is currently monolithic, which imposes limitations on independent scaling of individual parts.\n*   There may be performance limitations under load significantly exceeding the target for MVP (~1000 simultaneous users) before implementing deep optimizations and microservices."
        }
      },
      "learnMoreContribute": {
        "q1": {
          "question": "Where can I get more detailed information about the project?",
          "answer": "All detailed documentation is available in the repository. We strive to make it as complete and up-to-date as possible:\n\n*   [Requirements Documentation](link): What we are building.\n*   [Development Guide](link): How we write code.\n*   [Technical Documentation](link): Architecture and stack.\n*   [API Specification](link): Component interaction.\n*   [Integrations Documentation](link): External services.\n*   [Security Guide](link): Protecting the ASSET.\n*   [Performance Guide](link): How to make the system fast.\n*   [Monitoring and Logging Guide](link): State visibility.\n*   [UI Documentation](link): Visual design.\n*   [Sound Documentation](link): Audio system.\n*   [Support and Maintenance Guide](link): Life after release.\n*   [Error Specification](link): Handling failures.\n*   [Testing Guide](link): Quality assurance.\n*   [Microservice Migration Plan](link): Evolution strategy.\n*   [MVP Requirements Instruction](link): MVP details.\n\n(Ensure all [link] point to the corresponding files in your repository)"
        },
        "q2": {
          "question": "How can I join the project development or contribute?",
          "answer": "We welcome contributions to building this digital ASSET (Principle 10)! You can contribute in various ways: code, design/UX suggestions, documentation improvements, testing assistance. Please refer to the <a href=\"CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">Contribution Guide</a> (if available). Your participation is part of the Power of Assistance (Margulan's principle) that makes the project stronger."
        },
        "q3": {
          "question": "Where can I ask additional questions?",
          "answer": "If you have questions not covered by this documentation, please use the Issues section in the GitHub repository."
        }
      }
    }
  },
  "docs": {
    "general": {
      "title": "BrainMessenger - Your Digital Asset for Effective Communication",
      "subtitle": "Introduction: Building a System of Value",
      "introduction": {
        "title": "Introduction: Building a System of Value",
        "content": "Welcome to the BrainMessenger repository. This is not just another messenger. It is a purposeful project aimed at creating a <strong>reliable, scalable, and secure SYSTEM</strong> (Principle 9) that will become a <strong>key digital ASSET</strong> (Principle 10) for every user. Our main goal is to <strong>simplify complexity</strong> (Margulan Seisembayev's principle), providing intuitive and powerful tools for effective communication and interaction in the modern digital world.<br/><br/>BrainMessenger is built upon a <strong>strong foundation</strong> (Principle 8) of deep principles, conscious planning, and <strong>continuous learning</strong> (Principle 1). Every line of code, every decision made – this is a <strong>long-term investment</strong> (Principle 8) in the <strong>quality</strong> (Principle 3) and <strong>value</strong> (Principle 2) of our product."
      },
      "visionAndMission": {
        "title": "Vision and Mission: Our Long-Term View",
        "visionTitle": "Our Vision:",
        "visionContent": "To create a leading digital asset for communication that helps millions of users worldwide effectively exchange information, build communities, and achieve their goals.",
        "missionTitle": "Our Mission:",
        "missionContent": "To simplify complex interaction by providing a reliable, secure, and user-friendly messenger built on principles of quality, transparency, and continuous improvement."
      },
      "keyPrinciples": {
        "title": "Key Principles: The Foundation of Our System",
        "intro": "Our actions and decisions are guided by a set of key principles that serve as the <strong>foundation</strong> (Principle 8) of the entire BrainMessenger project. These are not just words, but <strong>personal algorithms and standards (Kaizen, Principle 9)</strong>, developed through experience and reflection (Principle 1):",
        "principles": [
          "<strong>Continuous Learning and Growth (Principle 1):</strong> The process of creating BrainMessenger is a proving ground for deep learning in technology, architecture, and user psychology. We learn at every step, turning mistakes into lessons.",
          "<strong>Creating Value (Principle 2):</strong> The user's benefit is at the core of everything. We build something that genuinely solves problems and makes life better.",
          "<strong>Quality Over Quantity (Principle 3):</strong> We strive to do things well, not just quickly. Reliability, thoughtfulness, and attention to detail are our priorities.",
          "<strong>Mindfulness and Presence (Principle 4):</strong> Being attentive to the process, users, and the team.",
          "<strong>Health as a Foundation (Principle 5):</strong> The physical and mental well-being of the team (and future users) is the basis for productivity and sustainability.",
          "<strong>Responsibility and Proactivity (Principle 6):</strong> We take responsibility for the outcome and act preemptively.",
          "<strong>Integrity (Principle 7):</strong> Our words align with our actions.",
          "<strong>Long-term Thinking (Principle 8):</strong> We invest time and effort with a view to the future.",
          "<strong>System and Optimization (Principle 9):</strong> We build processes and architecture as a system, constantly seeking ways to increase efficiency (Kaizen).",
          "<strong>Creating Wealth > Earning Money (Principle 10):</strong> Focusing on creating an ASSET (BrainMessenger) that brings value and works in the long term.",
          "<strong>Flexibility and Adaptability (Principle 11):</strong> Willingness to change tactics and tools while maintaining the vision.",
          "<strong>Pragmatism and Realism (Principle 12):</strong> Making decisions based on real data and capabilities.",
          "<strong>Persistence (Principle 13):</strong> Not giving up in the face of difficulties, extracting lessons from failures.",
          "<strong>Using External Expertise and Feedback (Principle 14):</strong> We learn from others, listen to constructive criticism.",
          "<strong>Bias for Action (Principle 15):</strong> In the early stages, it's more important to start doing and get feedback than to plan endlessly."
        ],
        "outro": "These principles, inspired by the philosophy of Margulan Seisembayev and the practices of leading IT companies, shape our culture and development approach."
      },
      "aboutMVP": {
        "title": "About the BrainMessenger Project (MVP Focus)",
        "intro": "Our current focus – on the development of the <strong>Minimum Viable Product (MVP)</strong>. MVP – this is the first, <strong>pragmatic</strong> (Principle 12) step towards realizing our vision. We are building a <strong>solid technical foundation</strong> (Principle 8) that will allow us to quickly and efficiently develop the product in the future.",
        "featuresTitle": "The MVP includes basic but <strong>high-quality and reliable</strong> (Principle 3) features that provide key <strong>value</strong> (Principle 2):",
        "features": [
          "<strong>Basic Messaging:</strong> Sending and receiving text messages in personal chats and groups/channels.",
          "<strong>File Sharing:</strong> Uploading and downloading files (with image optimization).",
          "<strong>Channels and Groups:</strong> Basic creation of groups/channels, joining public channels, and reading content.",
          "<strong>Basic Account Management:</strong> Registration, login/logout, profile editing (name, avatar), basic security settings.",
          "<strong>Core UI Settings:</strong> Choosing the theme (Light/Dark), basic notification and language settings.",
          "<strong>Basic Security:</strong> Data encryption (TLS, password hashing, basic measures against SQLi/XSS/DDoS), email confirmation during registration.",
          "<strong>Adaptive UI:</strong> An interface adapted for mobile (Android, iOS) and web platforms.",
          "<strong>Basic Multilingualism:</strong> Support for several interface languages (English, Russian, and others as per DocLocIn.md)."
        ],
        "outro": "Functionality beyond the MVP (audio/video calls, advanced security/privacy features, premium subscription, full animation set, AI integrations) is planned for subsequent stages of the Roadmap."
      },
      "howWeBuild": {
        "title": "How We Build: The Story of Creation and the Kaizen Process",
        "intro": "The process of creating BrainMessenger is a living story, based on our principles. We build it <strong>systematically</strong> (Principle 9), step by step, documenting each stage and continuously seeking opportunities for <strong>improvement (Kaizen)</strong>.",
        "steps": [
          "<strong>Mindful Planning (Principle 4):</strong> The project began with a clear definition of global goals and their decomposition into achievable stages (Roadmap).",
          "<strong>Choosing the Foundation (Principle 8, 12):</strong> We carefully selected the technology stack – reliable and <strong>pragmatic</strong> tools (TypeScript, NestJS, React/RN, PostgreSQL/Neon, Cloudflare R2, Kafka, Redis) that form a <strong>solid technical foundation</strong>.",
          "<strong>Building the MVP Core:</strong> Implementation started with the basic, critical parts of the system (Authentication, Basic UI, Infrastructure, File Handling). We apply <strong>Bias for Action</strong> (Principle 15), focusing on building working components, even if they are minimal for now.",
          "<strong>Continuous Learning and Applying Knowledge (Principle 1):</strong> Every new task, especially related to learning or integrating technologies (as seen in the <a href=\"https://www.notion.so/2025-2026-1576e78881b7435e9c3c2cf174e61b91?pvs=4\" target=\"_blank\" rel=\"noopener noreferrer\">Video Tracker</a> and tasks), is viewed as an opportunity for growth. We document this process through videos and reflection (Kaizen-Hour).",
          "<strong>Systemic Approach to Quality (Principle 3, 9):</strong> We integrate testing early in the development cycle (Unit tests), configure CI/CD pipelines for automated checks, and use monitoring (Prometheus, Grafana, Sentry) and logging (Winston, ELK) tools for continuous control over the <strong>system's health</strong> (Principle 5) in real time.",
          "<strong>Documentation as Part of the Knowledge System:</strong> The entire development process, architectural decisions, standards, and requirements are carefully documented. This is not just a formality, but part of creating a <strong>knowledge system</strong> that accelerates onboarding, simplifies support, and enables informed decision-making in the future."
        ],
        "outro": "We are building BrainMessenger as a living, evolving organism, constantly adapting and improving based on our principles and feedback from the development process and future users."
      },
      "technologyStack": {
        "title": "Technology Stack: Our Tools for Creating the Asset",
        "intro": "We have chosen a stack that is <strong>pragmatic</strong> (Principle 12), <strong>reliable</strong> (Principle 3), and <strong>scalable</strong> (Principle 8) to create our <strong>digital ASSET</strong>.",
        "stack": [
          "<strong>Language:</strong> <a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener noreferrer\">TypeScript</a> - Static typing to enhance code quality and reliability.",
          "<strong>Backend:</strong> <a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Node.js</a>, <a href=\"https://nestjs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">NestJS</a> - Efficient and structured framework for server logic and GraphQL API.",
          "<strong>Frontend:</strong> <a href=\"https://react.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">React</a>, <a href=\"https://nextjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Next.js</a> (Web), <a href=\"https://reactnative.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">React Native</a> (Mobile/Desktop) - Cross-platform UI development focusing on performance.",
          "<strong>API:</strong> <a href=\"https://graphql.org/\" target=\"_blank\" rel=\"noopener noreferrer\">GraphQL</a> - Flexible interaction between client and server.",
          "<strong>Real-time:</strong> WebSockets - Instant message delivery.",
          "<strong>Database:</strong> <a href=\"https://www.postgresql.org/\" target=\"_blank\" rel=\"noopener noreferrer\">PostgreSQL</a> (via <a href=\"https://neon.tech/\" target=\"_blank\" rel=\"noopener noreferrer\">Neon</a>) - Reliable and scalable database. Neon as a managed service reduces operational overhead (Pragmatism).",
          "<strong>ORM:</strong> <a href=\"https://www.prisma.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Prisma</a> - Type-safe and reliable database interaction, protection against SQL injection (Quality, Security).",
          "<strong>Caching:</strong> <a href=\"https://redis.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Redis</a> - High-performance caching and state management.",
          "<strong>Queues:</strong> <a href=\"https://kafka.apache.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Kafka</a> - Reliable asynchronous task processing.",
          "<strong>File Storage:</strong> <a href=\"https://www.cloudflare.com/developer/r2/\" target=\"_blank\" rel=\"noopener noreferrer\">Cloudflare R2</a> - Object storage with favorable pricing and no egress fees (Pragmatism, ASSET).",
          "<strong>Notifications:</strong> <a href=\"https://firebase.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Firebase</a> - Managed service for push notifications.",
          "<strong>Email/2FA:</strong> <a href=\"https://developers.google.com/gmail/api\" target=\"_blank\" rel=\"noopener noreferrer\">Gmail API</a> - Reliable delivery of transactional emails (Confirmation codes, 2FA).",
          "<strong>Payments:</strong> <a href=\"https://stripe.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Stripe</a>, Cryptomus (Beyond MVP) - ASSET monetization, Pragmatism.",
          "<strong>Testing:</strong> Jest, Cypress, Detox, k6, OWASP ZAP/Burp Suite (plan) - Comprehensive approach to ensuring quality.",
          "<strong>Deployment:</strong> <a href=\"https://vercel.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Vercel</a> (Web), Docker, <a href=\"https://kubernetes.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Kubernetes</a> - Automated and scalable deployment.",
          "<strong>Monitoring:</strong> Prometheus, Grafana, Sentry (plan) - System visibility and Kaizen analysis."
        ]
      },
      "architecture": {
        "title": "Architecture: The Evolution of the System",
        "intro": "Currently, BrainMessenger is implemented as a <strong>monolithic application based on NestJS</strong>. This is a <strong>pragmatic</strong> (Principle 12) decision for the MVP, allowing us to quickly launch the product and validate core hypotheses.",
        "future": "In the future, as the project grows and the load increases, we plan a phased transition to a <strong>microservice architecture</strong> using the <strong>Strangler Pattern</strong>. This is a <strong>long-term strategy</strong> (Principle 8) that will enable independent scaling and development of individual components (chats, calls, AI, payments), increasing the system's overall <strong>reliability and flexibility</strong> (Principle 3, 11).",
        "interaction": "Interaction between components will be via <strong>GraphQL API</strong> (synchronously) and <strong>Kafka</strong> (asynchronously), using <strong>Apollo Federation</strong> (in the future) to build a unified API schema from multiple microservices."
      },
      "projectStatus": {
        "title": "Project Status: Current Stage (MVP)",
        "content": "At this time, the project is in the active development stage of the <strong>MVP</strong> (as per the <a href=\"https://www.notion.so/MVP-11a2a21315e54eb3b3c90171b4c7493d?pvs=4\" target=\"_blank\" rel=\"noopener noreferrer\">MVP Requirements Instruction</a>). We are focused on completing the core messaging functionality, file handling, group/channel creation, and basic settings, while simultaneously strengthening the <strong>technical foundation</strong> (Principle 8) and embedding <strong>continuous learning</strong> and <strong>Kaizen</strong> processes into our daily work.",
        "progress": "Progress is documented through tasks, code in the repository, and video recordings that showcase our journey and the <strong>process of creation</strong> (Principle 1)."
      },
      "gettingStarted": {
        "title": "Getting Started (For Developers)",
        "intro": "Want to join us in building this digital ASSET? Here's how to get started:",
        "steps": [
          "Clone the repository:<br/>```bash<br/>git clone <URL of your repository><br/>cd BrainMessenger<br/>```",
          "Install dependencies:<br/>```bash<br/>npm install # Turborepo will install dependencies for all packages<br/>```",
          "Set up environment variables: Copy `.env.example` to `.env` and fill in the necessary data for integrations (Neon, R2, Firebase, etc.). <strong>Do not commit your `.env` file!</strong><br/>```bash<br/>cp .env.example .env<br/># Fill in .env<br/>```",
          "Set up the database: Run a local PostgreSQL or use a Neon instance, then apply Prisma migrations.<br/>```bash<br/>cd backend<br/>npx prisma migrate dev --name initial_setup # Or npx prisma migrate deploy for production<br/>cd ..<br/>```",
          "Start services in development mode:<br/>```bash<br/>turbo run dev # This will start backend and frontend dev servers<br/># Or navigate to specific packages and run their dev scripts:<br/># cd backend && npm run start:dev<br/># cd packages/web && npm run dev<br/># cd packages/mobile-desktop && npm run android / npm run windows<br/>```"
        ],
        "outro": "More detailed instructions on local setup and development can be found in the <a href=\"link_to_development_guide_doc\" target=\"_blank\" rel=\"noopener noreferrer\">Development Guide</a>."
      },
      "documentationSystem": {
        "title": "Documentation: Our System of Knowledge",
        "intro": "This README provides a high-level overview. All detailed information about the project is contained within our <strong>comprehensive system of documentation</strong>. Exploring these documents is part of the <strong>learning</strong> process (Principle 1) and understanding the <strong>system</strong> (Principle 9):",
        "links": [
          "<a href=\"docs/AllRequirements/Docs/Planning/DocReq.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Requirements Documentation</strong></a>: What we are building (functional and non-functional requirements).",
          "<a href=\"docs/AllRequirements/Docs/Dev/DocDevIn.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Development Guide</strong></a>: How we write code (structure, standards, tools, CI/CD process).",
          "<a href=\"docs/AllRequirements/Docs/Dev/DocTech.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Technical Documentation</strong></a>: High-level overview of the architecture and stack.",
          "<a href=\"docs/AllRequirements/Docs/Dev/DocSpec.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>API Specification</strong></a>: How components interact (GraphQL API description).",
          "<a href=\"docs/AllRequirements/Docs/Dev/DocInt.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Integrations Documentation</strong></a>: How we use external services (Neon, R2, Firebase, Stripe, etc.) as <strong>levers</strong>.",
          "<a href=\"docs/AllRequirements/Docs/Infrastructure/DocSecurity.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Security Guide</strong></a>: How we protect the ASSET and data (principles, methods, tools, process).",
          "<a href=\"docs/AllRequirements/Docs/Infrastructure/DocPer.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Performance Guide</strong></a>: How we make the system fast (metrics, techniques, optimization tools).",
          "<a href=\"docs/AllRequirements/Docs/Infrastructure/DocMonLog.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Monitoring and Logging Guide</strong></a>: How we see the system's state (metrics, logs, alerts).",
          "<a href=\"docs/AllRequirements/Docs/Design/Design/DocUI.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>UI Documentation</strong></a>: What the application looks like and why (layouts, components, design principles).",
          "<a href=\"docs/AllRequirements/Docs/Sound/DocSound.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Audio Guide</strong></a>: How audio is used to enhance UX.",
          "<a href=\"docs/AllRequirements/Docs/Support/DocSupport.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Support and Maintenance Guide</strong></a>: How we support the system and users after release.",
          "<a href=\"docs/AllRequirements/Docs/Testing/DocSpecError.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Error Specification</strong></a>: How we handle and report errors.",
          "<a href=\"docs/AllRequirements/Docs/Testing/DocTesting.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Testing Guide</strong></a>: How we verify quality and reliability.",
          "<a href=\"docs/AllRequirements/Docs/Infrastructure/DocMigrationMicro.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Microservice Migration Plan</strong></a>: Our long-term architectural evolution strategy.",
          "<a href=\"docs/AllRequirements/Docs/Planning/DocReq.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>MVP Requirements Instruction</strong></a>: Detailed analysis of MVP requirements and implementation status."
        ]
      },
      "contribution": {
        "title": "Contribution",
        "content": "We welcome contributions to the building of this digital ASSET! If you have ideas, suggestions, or want to help with the code, please refer to the <a href=\"CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">Contribution Guide</a> (if available)."
      }
    },
    "design": {
      "title": "Документация Дизайна BrainMessenger",
      "subtitle": "Система Качества и Ценности",
      "section1": {
        "title": "1. Введение: Дизайн как Фундамент Ценности",
        "name": "BrainMessenger Design System",
        "description": "Эта дизайн-система определяет визуальные и функциональные стандарты для интерфейса BrainMessenger. Наша цель — создать интерфейс, который не просто выглядит хорошо, но и является <strong>интуитивно понятным, эффективным и доступным</strong> (Принцип 2: Создание Ценности), опираясь на принципы <strong>качества > количества</strong> (Принцип 3) и <strong>прагматизма</strong> (Принцип 12) в выборе решений.",
        "goal": "Обеспечить <strong>единообразие, надежность и позитивный пользовательский опыт</strong> на всех платформах (Windows, Android, веб), делая BrainMessenger <strong>полезным АКТИВОМ</strong> (Принцип 10) для пользователей.",
        "principles_title": "Принципы, которыми руководствуется дизайн:",
        "principles": [
          "<strong>Создание Ценности (Принцип 2):</strong> Дизайн должен быть функциональным и решать задачи пользователя максимально удобно и эффективно.",
          "<strong>Качество > Количество (Принцип 3):</strong> Фокус на отточенности ключевых элементов, а не на множестве непродуманных деталей. Дизайн должен быть <strong>надежным</strong> и <strong>продуманным</strong>.",
          "<strong>Прагматизм и Реализм (Принцип 12):</strong> Выбор дизайнерских решений, реализуемых с учетом технических ограничений (например, оптимизация анимаций).",
          "<strong>Целостность (Принцип 7):</strong> Визуальная и функциональная целостность на всех платформах.",
          "<strong>Здоровье как Фундамент (Принцип 5):</strong> Внимание к доступности (WCAG), чтобы дизайн не создавал излишней нагрузки (зрительной, когнитивной) на пользователя."
        ]
      },
      "section2": {
        "title": "2. Цветовая палитра: Визуальный язык BrainMessenger",
        "intro": "Цвета разделены для Light и Dark режимов, поддерживая переключение темы (функция \"Night Mode\"). Все цвета заданы в HEX.",
        "light_mode_title": "2.1. Light Mode",
        "light_mode_table": [
          ["Категория", "Цвет (HEX)", "Назначение"],
          ["<strong>Primary Gradient</strong>", "`#A7F43A` → `#00C853`", "Основной градиент для акцентных элементов (кнопки \"Get Started\", иконки)"],
          ["<strong>Accent</strong>", "`#FF6347`", "Акцентные элементы (ошибки, важные сообщения)"],
          ["<strong>Secondary</strong>", "`#00BFFF`", "Второстепенные кнопки, ссылки, интерактивные элементы"],
          ["<strong>Success</strong>", "`#96C93D`", "Подтверждение, успешные действия"],
          ["<strong>Background</strong>", "`#FFFFFF`", "Основной фон"],
          ["<strong>Surface</strong>", "`#F0F0F0`", "Карточки, панели, фоны сообщений"],
          ["<strong>Text Primary</strong>", "`#333333`", "Основной текст"],
          ["<strong>Text Secondary</strong>", "`#4D4D4D`", "Вторичный текст, подсказки, метаданные"],
          ["<strong>Disabled</strong>", "`#B0B0B0`", "Неактивные элементы"],
          ["<strong>Border</strong>", "`#E8E8D9`", "Границы, разделители"]
        ],
        "dark_mode_title": "2.2. Dark Mode",
        "dark_mode_table": [
          ["Категория", "Цвет (HEX)", "Назначение"],
          ["<strong>Primary Gradient</strong>", "`#F2F047` → `#1ED94F`", "Основной градиент для акцентных элементов"],
          ["<strong>Accent</strong>", "`#FF6347`", "Акцентные элементы (ошибки)"],
          ["<strong>Secondary</strong>", "`#00BFFF`", "Второстепенные кнопки, ссылки"],
          ["<strong>Success</strong>", "`#96C93D`", "Подтверждение, успешные действия"],
          ["<strong>Background</strong>", "`#1A1A1A`", "Основной фон"],
          ["<strong>Surface</strong>", "`#333333`", "Карточки, панели, фоны сообщений"],
          ["<strong>Text Primary</strong>", "`#FFFFFF`", "Основной текст"],
          ["<strong>Text Secondary</strong>", "`#D9E8D9`", "Вторичный текст, подсказки"],
          ["<strong>Disabled</strong>", "`#4D4D4D`", "Неактивные элементы"],
          ["<strong>Border</strong>", "`#B0B0B0`", "Границы, разделители"]
        ],
        "premium_colors_title": "2.3. Цвета Премиум-Функций (Визуальное выделение Ценности)",
        "premium_colors": [
          "<strong>Premium Accent:</strong> `#FFD600` (Золотой)",
          "<strong>Premium Secondary:</strong> `#2196F3` (Синий)",
          "Используются для визуального выделения премиум-функций (например, в анимациях нейронных связей, специальных элементах UI), подчеркивая их <strong>дополнительную ценность</strong> (Принцип 2, 10)."
        ],
        "color_application_title": "2.4. Применение Цветов (Примеры)",
        "color_application": [
          {
            "title": "Welcome Screen (из скриншота):",
            "items": [
              "Фон: `#1A1A1A` (Dark Mode).",
              "Кнопка \"Get Started\": Градиент `#F2F047` → `#1ED94F`.",
              "Иконка чата: `#F2F047` (обводка) с белым символом внутри.",
              "Текст: `#FFFFFF` (Welcome to Brain Messenger), `#D9E8D9` (подсказка)."
            ]
          },
          {
            "title": "Переключение темы:",
            "items": [
              "Реализовано через глобальный флаг `themeMode` (`Light`/`Dark`).",
              "Пример в React Native:\n```jsx\nimport { useColorScheme } from 'react-native';\nconst themeMode = useColorScheme() === 'dark' ? 'Dark' : 'Light';\nconst backgroundColor = themeMode === 'Dark' ? '#1A1A1A' : '#FFFFFF'; // Пример выбора фона\n```"
            ]
          }
        ],
        "usage_recommendations_title": "2.5. Рекомендации по Использованию Цветов",
        "usage_recommendations": [
          "<strong>Градиенты:</strong> Используйте `#A7F43A` → `#00C853` или `#F2F047` → `#1ED94F` (в зависимости от темы) для ключевых действий и акцентных элементов, привлекающих внимание к <strong>ценности</strong> (Принцип 2).",
          "<strong>Темная тема:</strong> Используйте `#1A1A1A` или `#212121` как основной фон для снижения нагрузки на глаза (связь с Принципом 5: Здоровье).",
          "<strong>Контраст:</strong> Всегда проверяйте контрастность текста и элементов для обеспечения <strong>доступности</strong> (WCAG 2.1 AA) и соответствия Принципу 7 (Целостность). Используйте инструменты вроде WebAIM Contrast Checker."
        ]
      },
      "section3": {
        "title": "3. Типографика: Читаемость как Основа Эффективности",
        "intro": "Выбор шрифта и его применение основаны на обеспечении максимальной читаемости и доступности, что критически важно для эффективного усвоения информации и снижения когнитивной нагрузки (связь с Принципом 5: Здоровье и Принципом 2: Ценность).",
        "primary_font_title": "3.1. Основной шрифт",
        "primary_font": [
          "<strong>Семейство:</strong> Roboto (Google Fonts)",
          "<strong>Запасной:</strong> Sans-serif",
          "<strong>Причина:</strong> Высокая читаемость на разных размерах экрана, широкая поддержка символов (мультиязычность), открытая лицензия и доступность."
        ],
        "sizes_styles_title": "3.2. Размеры и стили (Шкала для Иерархии)",
        "sizes_styles_table": [
          ["Уровень", "Размер", "Начертание", "Использование"],
          ["H1 (Заголовок)", "24px", "Bold", "Основные заголовки экранов (например, \"Чаты\")"],
          ["H2 (Подзаголовок)", "18px", "Medium", "Второстепенные заголовки, названия групп"],
          ["Body", "16px", "Regular", "Основной текст сообщений, список чатов"],
          ["Caption", "14px", "Regular", "Подписи под фото, время сообщений, мелкий текст"],
          ["Button", "16px", "Medium", "Текст кнопок действий"]
        ],
        "notes_title": "Примечания:",
        "notes": [
          "<strong>Высота строки (Line Height):</strong> Минимум 1.5 для основного текста для улучшения читаемости.",
          "<strong>Кастомизация (Принцип 2):</strong> Пользователь может выбрать альтернативный шрифт в настройках (например, Open Sans) для адаптации под свои предпочтения.",
          "<strong>Доступность:</strong> Соблюдение контраста и минимального размера шрифта для соответствия WCAG."
        ]
      },
      "section4": {
        "title": "4. Анимации: Оптимизация и Смысл (Принцип 12: Прагматизм)",
        "intro": "Анимации в BrainMessenger используются для улучшения пользовательского опыта, предоставления визуальной обратной связи и придания интерфейсу живости. Однако они должны быть <strong>прагматичными, оптимизированными</strong> (<2 ГБ RAM), и <strong>не создавать излишней нагрузки</strong> (связь с Принципом 5: Здоровье).",
        "principles_title": "4.1. Принципы Анимаций",
        "principles": [
          "<strong>Смысл:</strong> Каждая анимация должна иметь четкую цель – объяснить переход, привлечь внимание к важному, подтвердить действие.",
          "<strong>Плавность:</strong> Использование `ease-in-out` или `ease-out` для натурального движения.",
          "<strong>Оптимизация:</strong> Анимации не должны замедлять интерфейс или потреблять много ресурсов. Длительность подобрана для баланса между плавностью и скоростью.",
          "<strong>Доступность:</strong> Избегание слишком быстрых или мигающих анимаций, которые могут вызвать дискомфорт или приступы у чувствительных пользователей."
        ],
        "list_title": "4.2. Список Анимаций (Примеры)",
        "list_table": [
          ["Название", "Описание", "Триггер", "Параметры", "Связь с Принципами", "Кольоры (Light/Dark)"],
          ["Переключение слайдов", "Сдвиг слайдов (Welcome Screen)", "Свайп/клик по стрелке", "0.3 сек, slide left/right", "P2 (Онбординг)", "#96C93D / #96C93D"],
          ["Открытие чата", "Чат появляется снизу вверх", "Клик по чату в списке", "0.3 сек, ease-in-out", "P2 (Навигация)", "#00BFFF / #00BFFF"],
          ["Нажатие кнопки", "Визуальный фидбек при клике (уменьшение)", "Клик по кнопке", "0.2 сек, scale", "P2 (Фидбек)", "Градиент #F2F047→#1ED94F"],
          ["Отправка сообщения", "Сообщение появляется с плавным появлением", "Клик \"Отправить\"", "0.3 сек, fade-in", "P2 (Фидбек)", "#96C93D / #96C93D"],
          ["Переход между экранами", "Сдвиг экрана вправо/влево (базовая навигация)", "Навигация", "0.3 сек, slide", "P2 (Навигация)", "#B0B0B0 / #4D4D4D"],
          ["Анимация иконок (Morph)", "Преобразование иконки (например, mute → unmute)", "Клик (переключение состояния)", "0.4 сек, morph", "P2 (Состояние)", "#FF6347 / #FF6347"],
          ["Волны при нажатии (Ripple)", "Радиальные волны от точки нажатия (фидбек)", "Клик по кнопке/элементу", "0.3 сек, ripple", "P2 (Фидбек)", "#F2F047 / #F2F047"],
          ["Глитч-эффект (Premium)", "Искажение текста для премиум (визуализация)", "Активация подписки", "0.2 сек, glitch", "P2, P10 (Выделение)", "#FF6347 / #FF6347"],
          ["Нейронные связи (Premium)", "Пульсирующие линии (визуализация Актива)", "Премиум-экран", "0.5 сек, pulse", "P2, P10 (Выделение)", "#96C93D / #96C93D"]
        ],
        "implementation_examples_title": "4.3. Примеры Реализации (Фрагменты кода)",
        "css_ripple_title": "CSS для Ripple-эффекта:",
        "css_ripple_code": ".ripple {\n  background: linear-gradient(45deg, #F2F047, #1ED94F); /* Або інші кольори/градієнт */\n  border-radius: 50%;\n  animation: ripple 0.3s ease-out;\n}\n@keyframes ripple {\n  to { transform: scale(2); opacity: 0; }\n}",
        "rn_icon_title": "React Native для анімованої іконки:",
        "rn_icon_code": "import Animated from 'react-native-reanimated'; // Приклад бібліотеки\nimport Icon from 'react-native-vector-icons/MaterialIcons'; // Приклад бібліотеки\n\nconst color = themeMode === 'Dark' ? '#FFFFFF' : '#333333';\n// Створення анімованого компонента Icon\nconst AnimatedIcon = Animated.createAnimatedComponent(Icon);\n\n// Приклад використання з анімацією scale (припускаючи, що 'scale' - это Animated.Value)\n<AnimatedIcon name=\"volume-up\" color={color} style={{ transform: [{ scale: scale }] }} />"
      },
      "section5": {
        "title": "5. Выравнивание и Сетка: Структура и Порядок (Принцип 9: Система)",
        "intro": "Использование последовательной системы выравнивания и модульной сетки — это основа для создания <strong>системного, легко поддерживаемого и визуально гармоничного</strong> интерфейса (Принцип 9: Система).",
        "base_grid": "<strong>Базовая Сетка:</strong> 8px (базовый шаг для определения размеров элементов, отступов, интервалов). Все значения должны быть кратны 8 (или 4 для очень мелких элементов).",
        "alignment_title": "<strong>Выравнивание:</strong>",
        "alignment": [
          "Используется принцип <strong>визуальной иерархии</strong>: более важные элементы располагаются выше или визуально доминируют.",
          "<strong>Вертикальный поток:</strong> Контент на экранах организуется сверху вниз: Заголовок → Поле ввода → Кнопка действия.",
          "<strong>Горизонтальное выравнивание:</strong> Элементы в контейнерах выравниваются по левому краю (для LTR) или правому краю (для RTL), если нет необходимости в центрировании (например, заголовки в шапке).",
          "<strong>Отступы (Padding/Margin):</strong> Используются значения из шкалы, кратной 8px (8, 16, 24, 32, 40, 48 px и т.д.) для создания четких интервалов между элементами и группами элементов."
        ],
        "adaptability_title": "<strong>Адаптивность и Отзывчивость:</strong>",
        "adaptability": [
          "Дизайн адаптируется под различные размеры экрана для обеспечения <strong>ценности</strong> (Принцип 2) на любом устройстве.",
          "<strong>Мобильные устройства:</strong> 320px–767px (Обычно одноколоночный макет).",
          "<strong>Планшеты:</strong> 768px–1023px (Возможно, двухколоночный макет, боковые панели).",
          "<strong>Десктоп:</strong> 1024px+ (Широкий макет, многоколоночный дизайн, боковые панели)."
        ]
      },
      "section6": {
        "title": "6. Принципы Доступности (WCAG 2.1 AA): Дизайн для Всех (Принцип 5: Здоровье, Принцип 7: Целостность)",
        "intro": "<strong>Доступность — это не опция, а фундаментальное требование</strong> (схоже с Принципом 5: Здоровье как Фундамент) для создания <strong>целостного</strong> (Принцип 7) и <strong>ценного</strong> (Принцип 2) продукта, которым могут пользоваться все, независимо от их способностей или используемых технологий. Мы стремимся соответствовать уровню WCAG 2.1 AA.",
        "principles": [
          "<strong>Контрастность Цветов:</strong> Текстовые элементы должны иметь минимальный контраст 4.5:1 (для обычного текста) и 3:1 (для крупного текста или иконок) по отношению к фону. Это проверяется для обеих тем (Light/Dark).",
          "<strong>Навигация с Клавиатуры:</strong> Все интерактивные элементы (кнопки, ссылки, поля ввода) должны быть доступны для навигации с помощью клавиатуры (Tab, Shift+Tab) и активации (Enter, Space).",
          "<strong>Поддержка Экранных Читалок (Screen Readers):</strong> Использование семантической разметки (HTML) и ARIA-атрибутов для предоставления контекста и информации пользователям экранных читалок (например, описания для иконок, состояния элементов).",
          "<strong>Визуальный Индикатор Фокуса:</strong> Для пользователей клавиатуры должен быть четкий и видимый индикатор текущего сфокусированного элемента (например, синяя обводка `#007BFF`).",
          "<strong>Обработка Ошибок:</strong> Сообщения об ошибках должны быть четкими, понятными и легко определяемыми пользователями, включая пользователей экранных читалок.",
          "<strong>Поддержка RTL (Справа Налево):</strong> Дизайн адаптируется для языков с направлением письма справа налево (например, арабский), включая зеркальное отображение макета, иконок и текста (см. DocLocIn.md)."
        ]
      },
      "section7": {
        "title": "7. Примечания и Рекомендации",
        "notes": [
          "<strong>Кастомизация Пользователем:</strong> Помните, что некоторые аспекты дизайна (цвета чатов, шрифты) пользователь может изменять в настройках. Дизайн системы должен учитывать эту гибкость.",
          "<strong>Тестирование на Реальных Устройствах:</strong> Все компоненты дизайна необходимо тестировать на разнообразных устройствах, с различными разрешениями экрана и в разных условиях освещения, чтобы убедиться в их эффективности и доступности.",
          "<strong>Живая Документация:</strong> Эта дизайн-система — живой документ. Она будет дополняться новыми компонентами, шаблонами и рекомендациями по мере развития продукта, отражая принципы <strong>непрерывного совершенствования</strong> (Принцип 1) и <strong>системного подхода</strong> (Принцип 9).",
          "<strong>Дизайн как часть Процесса Кайдзен:</strong> Дизайн-решения анализируются и улучшаются на основе обратной связи и реального использования, интегрируясь в общий процесс Кайдзен (Принцип 9, 14)."
        ]
      }
    }
  },
  "common": {
    "loading": "Loading...",
    "error": "An error occurred. Please try again.",
    "noData": "No data available.",
    "retry": "Retry",
    "seeAll": "See All",
    "backToHome": "Back to Home"
  },
  "roadmap": {
    "title": {
      "section": "Development Roadmap",
      "projectLaunch": "Project Launch",
      "enhancedSecurity": "Enhanced Security & Features",
      "advancedCollaboration": "Advanced Collaboration Tools",
      "mobileEnhancement": "Mobile Enhancement",
      "aiIntegration": "AI Integration",
      "globalExpansion": "Global Expansion",
      "enterpriseSolutions": "Enterprise Solutions",
      "futureInnovation": "Future Innovation"
    },
    "subtitle": {
      "section": "Our journey to revolutionize secure messaging"
    },
    "date": {
      "jan2024": "January 2024",
      "mar2024": "March 2024",
      "jun2024": "June 2024",
      "sep2024": "September 2024",
      "nov2024": "November 2024",
      "jan2025": "January 2025",
      "mar2025": "March 2025",
      "jun2025": "June 2025",
      "beyond2025": "Beyond 2025"
    },
    "description": {
      "projectLaunch": "Initial release of BrainMessenger with core messaging functionality",
      "enhancedSecurity": "Major security upgrades and new feature implementations",
      "advancedCollaboration": "Introduction of team collaboration features",
      "mobileEnhancement": "Focus on mobile experience and performance",
      "aiIntegration": "Implementation of AI-powered features",
      "globalExpansion": "Focus on international markets and localization",
      "enterpriseSolutions": "Dedicated features for enterprise clients",
      "futureInnovation": "Continuous innovation and feature expansion"
    },
    "features": {
      "secureMessagingInfrastructure": "Secure messaging infrastructure",
      "crossPlatformCompatibility": "Cross-platform compatibility",
      "basicUserInterface": "Basic user interface",
      "endToEndEncryption": "End-to-end encryption",
      "twoFactorAuthentication": "Two-factor authentication",
      "fileSharingCapabilities": "File sharing capabilities",
      "teamWorkspaces": "Team workspaces",
      "realTimeCollaboration": "Real-time collaboration",
      "advancedFileSharing": "Advanced file sharing",
      "nativeMobileApps": "Native mobile apps",
      "offlineFunctionality": "Offline functionality",
      "pushNotifications": "Push notifications",
      "smartMessageCategorization": "Smart message categorization",
      "automatedResponses": "Automated responses",
      "contentAnalysis": "Content analysis",
      "multiLanguageSupport": "Multi-language support",
      "regionalDataCenters": "Regional data centers",
      "culturalAdaptations": "Cultural adaptations",
      "advancedAdminControls": "Advanced admin controls",
      "customIntegrations": "Custom integrations",
      "enterpriseSupport": "Enterprise support",
      "emergingTechnologies": "Emerging technologies",
      "communityDrivenFeatures": "Community-driven features",
      "platformExpansion": "Platform expansion"
    },
    "status": {
      "completed": "completed",
      "inProgress": "in-progress",
      "upcoming": "upcoming"
    },
    "iconAlt": {
      "projectLaunch": "Project Launch icon",
      "enhancedSecurity": "Enhanced Security icon",
      "advancedCollaboration": "Advanced Collaboration icon",
      "mobileEnhancement": "Mobile Enhancement icon",
      "aiIntegration": "AI Integration icon",
      "globalExpansion": "Global Expansion icon",
      "enterpriseSolutions": "Enterprise Solutions icon",
      "futureInnovation": "Future Innovation icon"
    }
  },
  "footer": {
    "sectionTitle": {
      "brand": "Brain Messenger",
      "quickLinks": "Quick Links",
      "contact": "Contact Us",
      "social": "Follow Us"
    },
    "brandContent": "Connecting minds by empowering communication through innovative messaging solutions",
    "quickLinks": {
      "home": "Home",
      "features": "Features",
      "news": "News",
      "roadmap": "Roadmap",
      "faq": "FAQ",
      "doc": "Doc"
    },
    "iconAlt": {
      "quickLinks": "Quick Links icon",
      "email": "Email icon"
    },
    "social": {
      "twitter": "Twitter",
      "linkedin": "LinkedIn"
    },
    "previousSection": "Previous section",
    "nextSection": "Next section",
    "copyright": "2024 Brain Messenger. All rights reserved."
  }
}

{
  "header": {
    "features": "Функции",
    "news": "Новости",
    "faq": "Вопросы",
    "faqLink": "Вопросы",
    "docs": "Документация",
    "updates": "Обновления",
    "selectLanguage": "Выбрать язык",
    "changeLanguageTooltip": "Сменить язык",
    "lightMode": "Светлая тема",
    "darkMode": "Тёмная тема",
    "openMenu": "Открыть меню",
    "closeMenu": "Закрыть меню",
    "settings": "Настройки",
    "signOut": "Выйти",
    "deleteAccount": "Удалить аккаунт",
    "deleteAccountConfirmTitle": "Подтвердить удаление аккаунта",
    "deleteAccountConfirmMessage": "Вы уверены, что хотите удалить свой аккаунт? Это действие нельзя отменить.",
    "cancel": "Отмена",
    "confirmDelete": "Подтвердить удаление",
    "signIn": "Войти"
  },
  "hero": {
    "title": "Добро пожаловать в BrainMessenger",
    "subtitle": "Ваша умная платформа для общения",
    "getStarted": "Начать",
    "learnMore": "Узнать больше",
    "downloadButton": "Скачать",
    "downloadWindows": "Скачать для Windows",
    "downloadAndroid": "Скачать для Android"
  },
  "features": {
    "featuresTitle": "Ключевые функции",
    "featuresSubtitle": "Узнайте, что делает нас уникальными",
    "secureMessaging": "Безопасные сообщения",
    "secureMessagingDesc": "Сквозное шифрование для вашей конфиденциальности",
    "smartAssistant": "Умный ассистент",
    "smartAssistantDesc": "ИИ-помощник всегда под рукой",
    "crossPlatform": "Кросс-платформенность",
    "crossPlatformDesc": "Используйте на любом устройстве, где угодно",
    "groupChats": "Групповые чаты",
    "groupChatsDesc": "Общайтесь с несколькими людьми одновременно",
    "privacyFirst": "Конфиденциальность прежде всего",
    "privacyFirstDesc": "Ваши данные - ваши, всегда"
  },
  "news": {
    "latestNews": "Последние новости",
    "readMore": "Читать далее"
  },
  "faq": {
    "title": "Часто задаваемые вопросы",
    "subtitle": "Найдите ответы на часто задаваемые вопросы о BrainMessenger",
    "searchAlt": "Иконка поиска",
    "searchPlaceholder": "Поиск вопросов...",
    "allQuestions": "Все вопросы",
    "noResults": "По вашему запросу не найдено ни одного вопроса.",
    "categories": {
      "general": "Общие",
      "technical": "Технические",
      "security": "Безопасность",
      "pricing": "Цены",
      "generalProject": "Общие вопросы о проекте",
      "technicalQuestions": "Технические вопросы",
      "developmentProcesses": "Процессы разработки",
      "statusRoadmapFuture": "Статус, дорожная карта и будущее",
      "challengesOpportunitiesLimitations": "Вызовы, возможности и ограничения",
      "learnMoreContribute": "Узнать больше и внести вклад"
    },
    "questionsData": {
      "generalProject": {
        "q1": {
          "question": "Какова основная идея BrainMessenger? Что делает его особенным?",
          "answer": "BrainMessenger - это платформа для общения, которая ставит на первое место безопасность, интеллектуальные функции и удобство пользователя. Его особенность заключается в сочетании сквозного шифрования, ИИ-ассистента и кросс-платформенной доступности."
        },
        "q2": {
          "question": "Какие ключевые принципы лежат в основе разработки BrainMessenger?",
          "answer": "Разработка базируется на принципах создания ценности для пользователя, качества над количеством, прагматизма, целостности и здоровья как фундамента (включая доступность)."
        },
        "q3": {
          "question": "Кто стоит за проектом? Это открытое сообщество или команда?",
          "answer": "На данный момент проект разрабатывается командой энтузиастов, но мы открыты к сотрудничеству и вкладам от сообщества."
        }
      },
      "technicalQuestions": {
        "q1": {
          "question": "Почему был выбран именно такой стек технологий (TypeScript, NestJS, React/RN, PostgreSQL/Neon, GraphQL, Kafka, Redis, Cloudflare R2 и т.д.)?",
          "answer": "Выбор стека обусловлен стремлением к надежности, масштабируемости, скорости разработки и использованию современных подходов. TypeScript обеспечивает типізацію, NestJS – структуру бэкенда, React/RN – гибкость UI, а другие технологии – эффективную работу с данными, сообщениями и файлами."
        },
        "q2": {
          "question": "Почему на старте используется монолитная архитектура, а не сразу микросервисы?",
          "answer": "Монолитная архитектура на старте позволяет быстрее запустить MVP и проверить основные гипотезы. Переход к микросервисам планируется в будущем для лучшей масштабируемости и гибкости."
        },
        "q3": {
          "question": "Какие подходы используются для обеспечения безопасности?",
          "answer": "Мы используем сквозное шифрование (E2EE) для всех приватных чатов, двухфакторную аутентификацию (2FA), регулярные аудиты безопасности и придерживаемся лучших практик защиты данных."
        },
        "q4": {
          "question": "Как реализована функциональность реального времени (обмен сообщениями)?",
          "answer": "Для обмена сообщениями в реальном времени используются WebSockets и, возможно, Kafka для обробки потоков сообщений, что обеспечивает быструю и надежную доставку."
        },
        "q5": {
          "question": "Почему используется GraphQL вместо REST API?",
          "answer": "GraphQL позволяет клиентам запрашивать только те данные, которые им нужны, уменьшая избыточность и улучшая производительность. Это также упрощает разработку API и эволюцию схемы данных."
        },
        "q6": {
          "question": "Как управляются большие объемы данных и файлов?",
          "answer": "Для хранения больших объемов данных используется PostgreSQL (возможно, с Neon для масштабируемости), а для файлов – Cloudflare R2, что обеспечивает надежное и эффективное хранение."
        }
      },
      "developmentProcesses": {
        "q1": {
          "question": "Какой подход к управлению проектом и задачами?",
          "answer": "Мы используем гибкие методологии разработки (Agile/Scrum) с регулярными спринтами, планированием и ретроспективами. Задачи отслеживаются в системе управления проектами."
        },
        "q2": {
          "question": "Как обеспечивается качество кода?",
          "answer": "Качество кода обеспечивается через код-ревью, статический анализ (линтеры, форматеры), соблюдение стандартов кодирования и написание тестов."
        },
        "q3": {
          "question": "Какая стратегия тестування используется?",
          "answer": "Наша стратегия включает юнит-тесты, интеграционные тесты и E2E-тесты для обеспечения надежности всех компонентів системы."
        },
        "q4": {
          "question": "Как обробляются ошибки?",
          "answer": "Ошибки отслеживаются с помощью систем моніторингу, логуються и анализируются для быстрого исправления. На клиенте предусмотрены механизмы обробки ошибок для улучшения UX."
        },
        "q5": {
          "question": "Как развертывается проект?",
          "answer": "Развертывание автоматизировано с помощью CI/CD пайплайнов, что обеспечивает быструю и надежную доставку оновлений."
        },
        "q6": {
          "question": "Как мониторится система в продакшене?",
          "answer": "Система мониторится с помощью специализированных инструментов, которые отслеживают производительность, доступность и ошибки в реальном времени."
        }
      },
      "statusRoadmapFuture": {
        "q1": {
          "question": "Каков текущий статус проекта?",
          "answer": "Проект находится на стадии активной разработки MVP. Основные функции обмена сообщениями и безопасности реализованы."
        },
        "q2": {
          "question": "Каковы следующие шаги после завершения MVP?",
          "answer": "После MVP планируется расширение функционала, улучшение производительности, добавление новых интеграций и постепенный переход к микросервисной архитектуре."
        },
        "q3": {
          "question": "Планируется ли переход на микросервисную архитектуру?",
          "answer": "Да, переход на микросервисную архитектуру планируется для обеспечения лучшей масштабируемости, гибкости и независимости разработки отдельных компонентов."
        }
      },
      "challengesOpportunitiesLimitations": {
        "q1": {
          "question": "Каковы основные технические вызовы (подводные камни) в проекте?",
          "answer": "Основные вызовы включают обеспечение высокого уровня безопасности, масштабирование системы под большие нагрузки и реализацию сложных ИИ-функций."
        },
        "q2": {
          "question": "Какие возможности и преимущества предоставляет архитектура и стек проекта?",
          "answer": "Выбранный стек и архитектура обеспечивают гибкость, скорость разработки, высокую производительность и возможность легко внедрять новые технологии."
        },
        "q3": {
          "question": "Каковы ограничения проекта на текущем этапе (MVP)?",
          "answer": "На этапе MVP функционал будет ограничен основными возможностями для быстрого запуска и сбора обратного связи. Некоторые расширенные функции будут добавлены позже."
        }
      },
      "learnMoreContribute": {
        "q1": {
          "question": "Где я могу получить более подробную информацию о проекте?",
          "answer": "Более подробную информацию можно найти в нашей документации (ссылка будет добавлена позже) и на странице проекта на GitHub (если проект открыт)."
        },
        "q2": {
          "question": "Как я могу присоединиться к разработке проекта или внести свой вклад?",
          "answer": "Мы всегда рады новым участникам! Свяжитесь с нами через контактную форму на сайте или через GitHub (если проект открыт), чтобы обсудить возможные варианты сотрудничества."
        },
        "q3": {
          "question": "Где я могу задать дополнительные вопросы?",
          "answer": "Дополнительные вопросы можно задать через контактную форму на сайте, в нашем комьюнити (ссылка будет добавлена) или создав issue на GitHub (если проект открыт)."
        }
      }
    }
  },
  "docs": {
    "general": {
      "title": "BrainMessenger - Ваш Цифровой Актив для Эффективной Коммуникации",
      "subtitle": "Введение: Построение Системы Ценности",
      "introduction": {
        "title": "Введение: Построение Системы Ценности",
        "content": "Добро пожаловать в репозиторий BrainMessenger. Это не просто очередной мессенджер. Это целенаправленный проект, направленный на создание <strong>надежной, масштабируемой и безопасной СИСТЕМЫ</strong> (Принцип 9), которая станет <strong>ключевым цифровым АКТИВОМ</strong> (Принцип 10) для каждого пользователя. Наша главная цель – <strong>спростити складність</strong> (принцип Маргулана Сейсембаева), предоставляя интуитивно понятные и мощные инструменты для эффективной коммуникации и взаимодействия в современном цифровом мире.<br/><br/>BrainMessenger построен на <strong>прочном фундаменте</strong> (Принцип 8) глубоких принципов, осознанного планирования и <strong>непрерывного обучения</strong> (Принцип 1). Каждая строка кода, каждое принятое решение – это <strong>долгосрочная инвестиция</strong> (Принцип 8) в <strong>качество</strong> (Принцип 3) и <strong>ценность</strong> (Принцип 2) нашего продукта."
      },
      "visionAndMission": {
        "title": "Видение и Миссия: Наш Долгосрочный Взгляд",
        "visionTitle": "Наше Видение:",
        "visionContent": "Создать ведущий цифровой актив для коммуникации, который поможет миллионам пользователей по всему миру эффективно обмениваться информацией, строить сообщества и достигать своих целей.",
        "missionTitle": "Наша Миссия:",
        "missionContent": "Упрощать сложное взаимодействие, предоставляя надежный, безопасный и удобный мессенджер, построенный на принципах качества, прозрачности и непрерывного совершенствования."
      },
      "keyPrinciples": {
        "title": "Ключевые Принципы: Фундамент Нашей Системы",
        "intro": "Наши действия и решения руководствуются набором ключевых принципов, которые служат <strong>фундаментом</strong> (Принцип 8) всего проекта BrainMessenger. Это не просто слова, а <strong>личные алгоритмы и стандарты (Кайдзен, Принцип 9)</strong>, разработанные через опыт и рефлексию (Принцип 1):",
        "principles": [
          "<strong>Непрерывное Обучение и Рост (Принцип 1):</strong> Процесс создания BrainMessenger – это полигон для глубокого обучения в технологиях, архитектуре и психологии пользователей. Мы учимся на каждом шагу, превращая ошибки в уроки.",
          "<strong>Создание Ценности (Принцип 2):</strong> Польза для пользователя – в основе всего. Мы строим то, что действительно решает проблемы и делает жизнь лучше.",
          "<strong>Качество Превыше Количества (Принцип 3):</strong> Мы стремимся делать вещи хорошо, а не просто быстро. Надежность, продуманность и внимание к деталям – наши приоритеты.",
          "<strong>Осознанность и Присутствие (Принцип 4):</strong> Быть внимательным к процессу, пользователям и команде.",
          "<strong>Здоровье как Фундамент (Принцип 5):</strong> Физическое и ментальное благополучие команды (и будущих пользователей) – основа продуктивности и устойчивости.",
          "<strong>Ответственность и Проактивность (Принцип 6):</strong> Мы берем ответственность за результат и действуем превентивно.",
          "<strong>Целостность (Принцип 7):</strong> Наши слова соответствуют нашим действиям.",
          "<strong>Долгосрочное Мышление (Принцип 8):</strong> Мы инвестируем время и усилия с прицелом на будущее.",
          "<strong>Система и Оптимизация (Принцип 9):</strong> Мы строим процессы и архитектуру как систему, постоянно ища пути повышения эффективности (Кайдзен).",
          "<strong>Создание Богатства > Зарабатывание Денег (Принцип 10):</strong> Фокус на создании АКТИВА (BrainMessenger), который приносит ценность и работает в долгосрочной перспективе.",
          "<strong>Гибкость и Адаптивность (Принцип 11):</strong> Готовность менять тактику и инструменты, сохраняя видение.",
          "<strong>Прагматизм и Реализм (Принцип 12):</strong> Принятие решений на основе реальных данных и возможностей.",
          "<strong>Настойчивость (Принцип 13):</strong> Не сдаваться перед трудностями, извлекать уроки из неудач.",
          "<strong>Использование Внешней Экспертизы и Обратной Связи (Принцип 14):</strong> Мы учимся у других, прислушиваемся к конструктивной критике.",
          "<strong>Склонность к Действию (Принцип 15):</strong> На ранних этапах важнее начать делать и получать обратную связь, чем бесконечно планировать."
        ],
        "outro": "Эти принципы, вдохновленные философией Маргулана Сейсембаева и практиками ведущих ИТ-компаний, формируют нашу культуру и подход к разработке."
      },
      "aboutMVP": {
        "title": "О Проекте BrainMessenger (Фокус на MVP)",
        "intro": "Наш текущий фокус – на разработке <strong>Минимально Жизнеспособного Продукта (MVP)</strong>. MVP – это первый, <strong>прагматичный</strong> (Принцип 12) шаг к реализации нашего видения. Мы строим <strong>прочный технический фундамент</strong> (Принцип 8), который позволит нам быстро и эффективно развивать продукт в будущем.",
        "featuresTitle": "MVP включает базовые, но <strong>высококачественные и надежные</strong> (Принцип 3) функции, предоставляющие ключевую <strong>ценность</strong> (Принцип 2):",
        "features": [
          "<strong>Базовый Обмен Сообщениями:</strong> Отправка и получение текстовых сообщений в личных чатах и группах/каналах.",
          "<strong>Обмен Файлами:</strong> Загрузка и скачивание файлов (с оптимизацией изображений).",
          "<strong>Каналы и Групы:</strong> Базовое создание групп/каналов, присоединение к публичным каналам и чтение контента.",
          "<strong>Базовое Управление Учетной Записью:</strong> Регистрация, вход/выход, редактирование профиля (имя, аватар), базовые настройки безопасности.",
          "<strong>Основные Настройки UI:</strong> Выбор темы (Светлая/Темная), базовые настройки уведомлений и языка.",
          "<strong>Базовая Безпека:</strong> Шифрование данных (TLS, хеширование паролей, базовые меры против SQLi/XSS/DDoS), подтверждение электронной почты при регистрации.",
          "<strong>Адаптивный UI:</strong> Интерфейс, адаптированный для мобильных (Android, iOS) и веб-платформ.",
          "<strong>Базовая Мультиязычность:</strong> Поддержка нескольких языков интерфейса (английский, русский и другие согласно DocLocIn.md)."
        ],
        "outro": "Функционал за пределами MVP (аудио/видеозвонки, расширенные функции безопасности/конфиденциальности, премиум-подписка, полный набор анимаций, интеграции ИИ) запланирован на последующие этапы Дорожной карты."
      },
      "howWeBuild": {
        "title": "Как Мы Строим: История Создания и Процесс Кайдзен",
        "intro": "Процесс создания BrainMessenger – это живая история, основанная на наших принципах. Мы строим его <strong>систематически</strong> (Принцип 9), шаг за шагом, документируя каждый этап и постоянно ища возможности для <strong>улучшения (Кайдзен)</strong>.",
        "steps": [
          "<strong>Осознанное Планирование (Принцип 4):</strong> Проект начался с четкого определения глобальных целей и их декомпозиции на достижимые этапы (Дорожная карта).",
          "<strong>Выбор Фундамента (Принцип 8, 12):</strong> Мы тщательно отобрали стек технологий – надежные и <strong>прагматичные</strong> инструменты (TypeScript, NestJS, React/RN, PostgreSQL/Neon, Cloudflare R2, Kafka, Redis), формирующие <strong>прочный технический фундамент</strong>.",
          "<strong>Построение Ядра MVP:</strong> Реализация началась с базовых, критически важных частей системы (Аутентификация, Базовый UI, Инфраструктура, Обработка Файлов). Мы применяем <strong>Склонность к Действию</strong> (Принцип 15), фокусируясь на построении работающих компонентов, даже если они пока минимальны.",
          "<strong>Непрерывное Обучение и Применение Знаний (Принцип 1):</strong> Каждая новая задача, особенно связанная с изучением или интеграцией технологий (как видно в <a href=\"https://www.notion.so/2025-2026-1576e78881b7435e9c3c2cf174e61b91?pvs=4\" target=\"_blank\" rel=\"noopener noreferrer\">Видео Трекере</a> и задачах), рассматривается как возможность для роста. Мы документуем этот процесс с помощью видео и рефлексии (Кайдзен-Час).",
          "<strong>Системный Подход к Качеству (Принцип 3, 9):</strong> Мы интегрируем тестирование на ранних этапах цикла разработки (Unit-тесты), настраиваем CI/CD пайплайны для автоматических проверок, и используем инструменты мониторинга (Prometheus, Grafana, Sentry) и логирования (Winston, ELK) для непрерывного контроля за <strong>здоровьем системы</strong> (Принцип 5) в реальном времени.",
          "<strong>Документация как Часть Системы Знаний:</strong> Весь процесс разработки, архитектурные решения, стандарты и требования тщательно документуются. Это не просто формальность, а часть создания <strong>системы знаний</strong>, которая ускоряет онбординг, упрощает поддержку и позволяет принимать обоснованные решения в будущем."
        ],
        "outro": "Мы строим BrainMessenger как живой, эволюционирующий организм, постоянно адаптируясь и улучшаясь на основе наших принципов и обратной связи от процесса разработки и будущих пользователей."
      },
      "technologyStack": {
        "title": "Стек Технологий: Наши Инструменты для Создания Актива",
        "intro": "Мы выбрали стек, который является <strong>прагматичным</strong> (Принцип 12), <strong>надежным</strong> (Принцип 3) и <strong>масштабируемым</strong> (Принцип 8) для создания нашего <strong>цифрового АКТИВА</strong>.",
        "stack": [
          "<strong>Язык:</strong> <a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener noreferrer\">TypeScript</a> - Статическая типізація для повышения качества и надежности кода.",
          "<strong>Бэкенд:</strong> <a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Node.js</a>, <a href=\"https://nestjs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">NestJS</a> - Эффективный и структурированный фреймворк для серверной логики и GraphQL API.",
          "<strong>Фронтенд:</strong> <a href=\"https://react.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">React</a>, <a href=\"https://nextjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Next.js</a> (Веб), <a href=\"https://reactnative.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">React Native</a> (Мобильный/Десктоп) - Кросс-платформенная разработка UI с фокусом на производительности.",
          "<strong>API:</strong> <a href=\"https://graphql.org/\" target=\"_blank\" rel=\"noopener noreferrer\">GraphQL</a> - Гибкое взаимодействие между клиентом и сервером.",
          "<strong>Реальное время:</strong> WebSockets - Мгновенная доставка сообщений.",
          "<strong>База данных:</strong> <a href=\"https://www.postgresql.org/\" target=\"_blank\" rel=\"noopener noreferrer\">PostgreSQL</a> (через <a href=\"https://neon.tech/\" target=\"_blank\" rel=\"noopener noreferrer\">Neon</a>) - Надежная и масштабируемая база данных. Neon как управляемый сервис уменьшает операционные расходы (Прагматизм).",
          "<strong>ORM:</strong> <a href=\"https://www.prisma.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Prisma</a> - Типобезопасное и надежное взаимодействие с базой данных, защита от SQL-инъекций (Качество, Безпека).",
          "<strong>Кэшування:</strong> <a href=\"https://redis.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Redis</a> - Высокопроизводительное кеширование и управление состоянием.",
          "<strong>Черги:</strong> <a href=\"https://kafka.apache.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Kafka</a> - Надежная асинхронная обробка задач.",
          "<strong>Хранилище файлов:</strong> <a href=\"https://www.cloudflare.com/developer/r2/\" target=\"_blank\" rel=\"noopener noreferrer\">Cloudflare R2</a> - Объектное хранилище с выгодными тарифами и без платы за исходящий трафик (Прагматизм, АКТИВ).",
          "<strong>Уведомления:</strong> <a href=\"https://firebase.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Firebase</a> - Управляемый сервис для push-уведомлений.",
          "<strong>Электронная почта/2FA:</strong> <a href=\"https://developers.google.com/gmail/api\" target=\"_blank\" rel=\"noopener noreferrer\">Gmail API</a> - Надежная доставка транзакционных писем (коды подтверждения, 2FA).",
          "<strong>Платежи:</strong> <a href=\"https://stripe.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Stripe</a>, Cryptomus (За пределами MVP) - Монетизация АКТИВУ, Прагматизм.",
          "<strong>Тестирование:</strong> Jest, Cypress, Detox, k6, OWASP ZAP/Burp Suite (план) - Комплексный подход к обеспечению качества.",
          "<strong>Развертывание:</strong> <a href=\"https://vercel.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Vercel</a> (Веб), Docker, <a href=\"https://kubernetes.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Kubernetes</a> - Автоматизованное и масштабированное развертывание.",
          "<strong>Мониторинг:</strong> Prometheus, Grafana, Sentry (план) - Видимость системы и анализ Кайдзен."
        ]
      },
      "architecture": {
        "title": "Архітектура: Еволюція Системы",
        "intro": "В настоящее время BrainMessenger реализован как <strong>монолитное приложение на базе NestJS</strong>. Это <strong>прагматичное</strong> (Принцип 12) решение для MVP, позволяющее быстро запустить продукт и проверить основные гипотезы.",
        "future": "В будущем, с ростом проекта и увеличением нагрузки, мы планируем поэтапный переход к <strong>микросервисной архитектуре</strong> с использованием <strong>Strangler Pattern</strong>. Это <strong>долгосрочная стратегия</strong> (Принцип 8), которая позволит независимо масштабировать и развивать отдельные компоненты (чаты, дзвінки, ИИ, платежи), повышая общую <strong>надежность и гибкость</strong> системы (Принцип 3, 11).",
        "interaction": "Взаимодействие между компонентами будет происходить через <strong>GraphQL API</strong> (синхронно) и <strong>Kafka</strong> (асинхронно), используя <strong>Apollo Federation</strong> (в будущем) для построения единой схемы API из нескольких микросервисов."
      },
      "projectStatus": {
        "title": "Статус Проекта: Текущий Этап (MVP)",
        "content": "На данный момент проект находится на этапе активной разработки <strong>MVP</strong> (согласно <a href=\"https://www.notion.so/MVP-11a2a21315e54eb3b3c90171b4c7493d?pvs=4\" target=\"_blank\" rel=\"noopener noreferrer\">Инструкции по Требованиям к MVP</a>). Мы сосредоточены на завершении основной функциональности обмена сообщениями, обработки файлов, создания групп/каналов и базовых настроек, одновременно укрепляя <strong>технический фундамент</strong> (Принцип 8) и внедряя процессы <strong>непрерывного обучения</strong> и <strong>Кайдзен</strong> в нашу ежедневную работу.",
        "progress": "Прогресс документируется через задачи, код в репозитории и видеозаписи, которые демонстрируют наш путь и <strong>процесс создания</strong> (Принцип 1)."
      },
      "gettingStarted": {
        "title": "Начало Работы (Для Разработчиков)",
        "intro": "Хотите присоединиться к нам в создании этого цифрового АКТИВА? Вот как начать:",
        "steps": [
          "Клонируйте репозиторий:<br/>```bash<br/>git clone <URL вашего репозитория><br/>cd BrainMessenger<br/>```",
          "Установите зависимости:<br/>```bash<br/>npm install # Turborepo установит зависимости для всех пакетов<br/>```",
          "Настройте переменные среды: Скопируйте `.env.example` в `.env` и заполните необходимые данные для интеграций (Neon, R2, Firebase и т.д.). <strong>Не коммитьте ваш файл `.env`!</strong><br/>```bash<br/>cp .env.example .env<br/># Заполните .env<br/>```",
          "Настройте базу данных: Запустите локальный PostgreSQL или используйте экземпляр Neon, затем примените миграции Prisma.<br/>```bash<br/>cd backend<br/>npx prisma migrate dev --name initial_setup # Или npx prisma migrate deploy для продакшена<br/>cd ..<br/>```",
          "Запустите сервисы в режиме разработки:<br/>```bash<br/>turbo run dev # Это запустит dev-серверы бэкенда и фронтенда<br/># Или перейдите к конкретным пакетам и запустите их dev-скрипты:<br/># cd backend && npm run start:dev<br/># cd packages/web && npm run dev<br/># cd packages/mobile-desktop && npm run android / npm run windows<br/>```"
        ],
        "outro": "Более подробные инструкции по локальной настройке и разработке можно найти в <a href=\"link_to_development_guide_doc\" target=\"_blank\" rel=\"noopener noreferrer\">Руководстве по Разработке</a>."
      },
      "documentationSystem": {
        "title": "Документация: Наша Система Знаний",
        "intro": "Этот README предоставляет общий обзор. Вся подробная информация о проекте содержится в нашей <strong>комплексной системе документации</strong>. Изучение этих документов является частью процесса <strong>обучения</strong> (Принцип 1) и понимания <strong>системы</strong> (Принцип 9):",
        "links": [
          "<a href=\"docs/AllRequirements/Docs/Planning/DocReq.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Документация Требований</strong></a>: Что мы строим (функциональные и нефункциональные требования).",
          "<a href=\"docs/AllRequirements/Docs/Dev/DocDevIn.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Руководство по Разработке</strong></a>: Как мы пишем код (структура, стандарты, инструменты, процесс CI/CD).",
          "<a href=\"docs/AllRequirements/Docs/Dev/DocTech.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Техническая Документация</strong></a>: Общий обзор архитектуры и стека.",
          "<a href=\"docs/AllRequirements/Docs/Dev/DocSpec.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Спецификация API</strong></a>: Как взаимодействуют компоненты (описание GraphQL API).",
          "<a href=\"docs/AllRequirements/Docs/Dev/DocInt.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Документация Интеграций</strong></a>: Как мы используем внешние сервіси (Neon, R2, Firebase, Stripe и т.д.) как <strong>рычаги</strong>.",
          "<a href=\"docs/AllRequirements/Docs/Infrastructure/DocSecurity.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Руководство по Безопасности</strong></a>: Как мы защищаем АКТИВ и данные (принципы, методы, инструменты, процесс).",
          "<a href=\"docs/AllRequirements/Docs/Infrastructure/DocPer.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Руководство по Производительности</strong></a>: Как мы делаем систему быстрой (метрики, техники, инструменты оптимизации).",
          "<a href=\"docs/AllRequirements/Docs/Infrastructure/DocMonLog.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Руководство по Мониторингу и Логированию</strong></a>: Как мы видим состояние системы (метрики, логи, оповещения).",
          "<a href=\"docs/AllRequirements/Docs/Design/Design/DocUI.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Документация UI</strong></a>: Как выглядит приложение и почему (макеты, компоненты, принципы дизайна).",
          "<a href=\"docs/AllRequirements/Docs/Sound/DocSound.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Руководство по Аудио</strong></a>: Как аудио используется для улучшения UX.",
          "<a href=\"docs/AllRequirements/Docs/Support/DocSupport.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Руководство по Поддержке и Обслуживанию</strong></a>: Как мы поддерживаем систему и пользователей после релиза.",
          "<a href=\"docs/AllRequirements/Docs/Testing/DocSpecError.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Спецификация Ошибок</strong></a>: Как мы обрабатываем и сообщаем об ошибках.",
          "<a href=\"docs/AllRequirements/Docs/Testing/DocTesting.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Руководство по Тестированию</strong></a>: Как мы проверяем качество и надежность.",
          "<a href=\"docs/AllRequirements/Docs/Infrastructure/DocMigrationMicro.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>План Миграции Микросервисов</strong></a>: Наша долгосрочная стратегия архитектурной эволюции.",
          "<a href=\"docs/AllRequirements/Docs/Planning/DocReq.md\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Инструкция по Требованиям к MVP</strong></a>: Детальный анализ требований к MVP и статус реализации)."
        ]
      },
      "contribution": {
        "title": "Вклад",
        "content": "Мы приветствуем вклад в создание этого цифрового АКТИВА! Если у вас есть идеи, предложения или вы хотите помочь с кодом, пожалуйста, обратитесь к <a href=\"CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">Руководству по Вкладу</a> (если доступно)."
      }
    },
    "design": {
      "title": "Документация Дизайна BrainMessenger",
      "subtitle": "Система Качества и Ценности",
      "section1": {
        "title": "1. Введение: Дизайн как Фундамент Ценности",
        "name": "BrainMessenger Design System",
        "description": "Эта дизайн-система определяет визуальные и функциональные стандарты для интерфейса BrainMessenger. Наша цель — создать интерфейс, который не просто выглядит хорошо, но и является <strong>интуитивно понятным, эффективным и доступным</strong> (Принцип 2: Создание Ценности), опираясь на принципы <strong>качества > количества</strong> (Принцип 3) и <strong>прагматизма</strong> (Принцип 12) в выборе решений.",
        "goal": "Обеспечить <strong>единообразие, надежность и позитивный пользовательский опыт</strong> на всех платформах (Windows, Android, веб), делая BrainMessenger <strong>полезным АКТИВОМ</strong> (Принцип 10) для пользователей.",
        "principles_title": "Принципы, которыми руководствуется дизайн:",
        "principles": [
          "<strong>Создание Ценности (Принцип 2):</strong> Дизайн должен быть функциональным и решать задачи пользователя максимально удобно и эффективно.",
          "<strong>Качество > Количество (Принцип 3):</strong> Фокус на отточенности ключевых элементов, а не на множестве непродуманных деталей. Дизайн должен быть <strong>надежным</strong> и <strong>продуманным</strong>.",
          "<strong>Прагматизм и Реализм (Принцип 12):</strong> Выбор дизайнерских решений, реализуемых с учетом технических ограничений (например, оптимизация анимаций).",
          "<strong>Целостность (Принцип 7):</strong> Визуальная и функциональная целостность на всех платформах.",
          "<strong>Здоровье как Фундамент (Принцип 5):</strong> Внимание к доступности (WCAG), чтобы дизайн не создавал излишней нагрузки (зрительной, когнитивной) на пользователя."
        ]
      },
      "section2": {
        "title": "2. Цветовая палитра: Визуальный язык BrainMessenger",
        "intro": "Цвета разделены для Light и Dark режимов, поддерживая переключение темы (функция \"Night Mode\"). Все цвета заданы в HEX.",
        "light_mode_title": "2.1. Light Mode",
        "light_mode_table": [
          ["Категория", "Цвет (HEX)", "Назначение"],
          ["<strong>Primary Gradient</strong>", "`#A7F43A` → `#00C853`", "Основной градиент для акцентных элементов (кнопки \"Get Started\", иконки)"],
          ["<strong>Accent</strong>", "`#FF6347`", "Акцентные элементы (ошибки, важные сообщения)"],
          ["<strong>Secondary</strong>", "`#00BFFF`", "Второстепенные кнопки, ссылки, интерактивные элементы"],
          ["<strong>Success</strong>", "`#96C93D`", "Подтверждение, успешные действия"],
          ["<strong>Background</strong>", "`#FFFFFF`", "Основной фон"],
          ["<strong>Surface</strong>", "`#F0F0F0`", "Карточки, панели, фоны сообщений"],
          ["<strong>Text Primary</strong>", "`#333333`", "Основной текст"],
          ["<strong>Text Secondary</strong>", "`#4D4D4D`", "Вторичный текст, подсказки, метаданные"],
          ["<strong>Disabled</strong>", "`#B0B0B0`", "Неактивные элементы"],
          ["<strong>Border</strong>", "`#E8E8D9`", "Границы, разделители"]
        ],
        "dark_mode_title": "2.2. Dark Mode",
        "dark_mode_table": [
          ["Категория", "Цвет (HEX)", "Назначение"],
          ["<strong>Primary Gradient</strong>", "`#F2F047` → `#1ED94F`", "Основной градиент для акцентных элементов"],
          ["<strong>Accent</strong>", "`#FF6347`", "Акцентные элементы (ошибки)"],
          ["<strong>Secondary</strong>", "`#00BFFF`", "Второстепенные кнопки, ссылки"],
          ["<strong>Success</strong>", "`#96C93D`", "Подтверждение, успешные действия"],
          ["<strong>Background</strong>", "`#1A1A1A`", "Основной фон"],
          ["<strong>Surface</strong>", "`#333333`", "Карточки, панели, фоны сообщений"],
          ["<strong>Text Primary</strong>", "`#FFFFFF`", "Основной текст"],
          ["<strong>Text Secondary</strong>", "`#D9E8D9`", "Вторичный текст, подсказки"],
          ["<strong>Disabled</strong>", "`#4D4D4D`", "Неактивные элементы"],
          ["<strong>Border</strong>", "`#B0B0B0`", "Границы, разделители"]
        ],
        "premium_colors_title": "2.3. Цвета Премиум-Функций (Визуальное выделение Ценности)",
        "premium_colors": [
          "<strong>Premium Accent:</strong> `#FFD600` (Золотой)",
          "<strong>Premium Secondary:</strong> `#2196F3` (Синий)",
          "Используются для визуального выделения премиум-функций (например, в анимациях нейронных связей, специальных элементах UI), подчеркивая их <strong>дополнительную ценность</strong> (Принцип 2, 10)."
        ],
        "color_application_title": "2.4. Применение Цветов (Примеры)",
        "color_application": [
          {
            "title": "Welcome Screen (со скриншота):",
            "items": [
              "Фон: `#1A1A1A` (Dark Mode).",
              "Кнопка \"Get Started\": Градиент `#F2F047` → `#1ED94F`.",
              "Иконка чата: `#F2F047` (обводка) с белым символом внутри.",
              "Текст: `#FFFFFF` (Welcome to Brain Messenger), `#D9E8D9` (подсказка)."
            ]
          },
          {
            "title": "Переключение темы:",
            "items": [
              "Реализовано через глобальный флаг `themeMode` (`Light`/`Dark`).",
              "Пример в React Native:\n```jsx\nimport { useColorScheme }s from 'react-native';\nconst themeMode = useColorScheme() === 'dark' ? 'Dark' : 'Light';\nconst backgroundColor = themeMode === 'Dark' ? '#1A1A1A' : '#FFFFFF'; // Пример выбора фона\n```"
            ]
          }
        ],
        "usage_recommendations_title": "2.5. Рекомендации по Использованию Цветов",
        "usage_recommendations": [
          "<strong>Градиенты:</strong> Используйте `#A7F43A` → `#00C853` или `#F2F047` → `#1ED94F` (в зависимости от темы) для ключевых действий и акцентных элементов, привлекающих внимание к <strong>ценности</strong> (Принцип 2).",
          "<strong>Темная тема:</strong> Используйте `#1A1A1A` или `#212121` как основной фон для снижения нагрузки на глаза (связь с Принципом 5: Здоровье).",
          "<strong>Контраст:</strong> Всегда проверяйте контрастность текста и элементов для обеспечения <strong>доступности</strong> (WCAG 2.1 AA) и соответствия Принципу 7 (Целостность). Используйте инструменты вроде WebAIM Contrast Checker."
        ]
      },
      "section3": {
        "title": "3. Типографика: Читабельность как Основа Эффективности",
        "intro": "Выбор шрифта и его применение базируются на обеспечении максимальной читабельности и доступности, что является критически важным для эффективного усвоения информации и снижения когнитивной нагрузки (связь с Принципом 5: Здоровье и Принципом 2: Ценность).",
        "primary_font_title": "3.1. Основной шрифт",
        "primary_font": [
          "<strong>Семейство:</strong> Roboto (Google Fonts)",
          "<strong>Запасной:</strong> Sans-serif",
          "<strong>Причина:</strong> Высокая читабельность на разных размерах экрана, широкая поддержка символов (мультиязычность), открытая лицензия и доступность."
        ],
        "sizes_styles_title": "3.2. Размеры и стили (Шкала для Иерархии)",
        "sizes_styles_table": [
          ["Уровень", "Размер", "Начертание", "Использование"],
          ["H1 (Заголовок)", "24px", "Bold", "Основные заголовки экранов (например, \"Чаты\")"],
          ["H2 (Подзаголовок)", "18px", "Medium", "Второстепенные заголовки, названия групп"],
          ["Body", "16px", "Regular", "Основной текст сообщений, список чатов"],
          ["Caption", "14px", "Regular", "Подписи под фото, время сообщений, дрібний текст"],
          ["Button", "16px", "Medium", "Текст кнопок дій"]
        ],
        "notes_title": "Примітки:",
        "notes": [
          "<strong>Висота рядка (Line Height):</strong> Мінімум 1.5 для основного тексту для покращення читабельності.",
          "<strong>Кастомизация (Принцип 2):</strong> Пользователь может выбрать альтернативный шрифт в настройках (например, Open Sans) для адаптации под свои предпочтения.",
          "<strong>Доступность:</strong> Соблюдение контраста и минимального размера шрифта для соответствия WCAG."
        ]
      },
      "section4": {
        "title": "4. Анімації: Оптимізація та Сенс (Принцип 12: Прагматизм)",
        "intro": "Анімації в BrainMessenger використовуються для покращення користувацького досвіду, надання візуального зворотного зв'язку та надання інтерфейсу жвавості. Однак вони мають бути <strong>прагматичними, оптимізованими</strong> (<2 ГБ RAM), і <strong>не створювати зайвого навантаження</strong> (зв'язок з Принципом 5: Здоров'я).",
        "principles_title": "4.1. Принципи Анімацій",
        "principles": [
          "<strong>Смысл:</strong> Каждая анимация должна иметь четкую цель – объяснить переход, привлечь внимание к важному, подтвердить действие.",
          "<strong>Плавность:</strong> Использование `ease-in-out` или `ease-out` для натурального движения.",
          "<strong>Оптимизация:</strong> Анимации не должны замедлять интерфейс или споживать много ресурсов. Тривалість підібрана для балансу между плавностью и скоростью.",
          "<strong>Доступность:</strong> Избегание слишком быстрых или мигающих анимаций, которые могут вызвать дискомфорт или приступы у чувствительных пользователей."
        ],
        "list_title": "4.2. Список Анімацій (Примеры)",
        "list_table": [
          ["Название", "Описание", "Триггер", "Параметры", "Связь с Принципами", "Кольоры (Light/Dark)"],
          ["Переключение слайдов", "Сдвиг слайдов (Welcome Screen)", "Свайп/клик по стрелке", "0.3 сек, slide left/right", "P2 (Онбординг)", "#96C93D / #96C93D"],
          ["Открытие чата", "Чат появляется снизу вверх", "Клик по чату в списке", "0.3 сек, ease-in-out", "P2 (Навигация)", "#00BFFF / #00BFFF"],
          ["Нажатие кнопки", "Визуальный фидбек при клике (уменьшение)", "Клик по кнопке", "0.2 сек, scale", "P2 (Фидбек)", "Градиент #F2F047→#1ED94F"],
          ["Отправка сообщения", "Сообщение появляется с плавным появлением", "Клик \"Отправить\"", "0.3 сек, fade-in", "P2 (Фидбек)", "#96C93D / #96C93D"],
          ["Переход между экранами", "Сдвиг экрана вправо/влево (базовая навигация)", "Навигация", "0.3 сек, slide", "P2 (Навигация)", "#B0B0B0 / #4D4D4D"],
          ["Анимация иконок (Morph)", "Преобразование иконки (например, mute → unmute)", "Клик (переключение состояния)", "0.4 сек, morph", "P2 (Состояние)", "#FF6347 / #FF6347"],
          ["Волны при нажатии (Ripple)", "Радиальные волны от точки нажатия (фидбек)", "Клик по кнопке/элементу", "0.3 сек, ripple", "P2 (Фидбек)", "#F2F047 / #F2F047"],
          ["Глитч-эффект (Premium)", "Искажение текста для премиум (визуализация)", "Активация подписки", "0.2 сек, glitch", "P2, P10 (Выделение)", "#FF6347 / #FF6347"],
          ["Нейронные связи (Premium)", "Пульсирующие линии (визуализация Актива)", "Премиум-экран", "0.5 сек, pulse", "P2, P10 (Выделение)", "#96C93D / #96C93D"]
        ],
        "implementation_examples_title": "4.3. Примеры Реализации (Фрагменты кода)",
        "css_ripple_title": "CSS для Ripple-эффекта:",
        "css_ripple_code": ".ripple {\n  background: linear-gradient(45deg, #F2F047, #1ED94F); /* Або інші кольори/градієнт */\n  border-radius: 50%;\n  animation: ripple 0.3s ease-out;\n}\n@keyframes ripple {\n  to { transform: scale(2); opacity: 0; }\n}",
        "rn_icon_title": "React Native для анімованої іконки:",
        "rn_icon_code": "import Animated from 'react-native-reanimated'; // Пример библиотеки\nimport Icon from 'react-native-vector-icons/MaterialIcons'; // Пример библиотеки\n\nconst color = themeMode === 'Dark' ? '#FFFFFF' : '#333333';\n// Створення анімованого компонента Icon\nconst AnimatedIcon = Animated.createAnimatedComponent(Icon);\n\n// Пример использования с анимацией scale (припускаючи, что 'scale' - это Animated.Value)\n<AnimatedIcon name=\"volume-up\" color={color} style={{ transform: [{ scale: scale }] }} />"
      },
      "section5": {
        "title": "5. Вирівнювання та Сітка: Структура та Порядок (Принцип 9: Система)",
        "intro": "Використання послідовної системи вирівнювання та модульної сітки — это основа для создания <strong>системного, легко подтримуваемого и визуально гармоничного</strong> интерфейса (Принцип 9: Система).",
        "base_grid": "<strong>Базовая Сітка:</strong> 8px (базовый шаг для определения размеров элементов, отступов, интервалов). Все значения должны быть кратны 8 (или 4 для очень мелких элементов).",
        "alignment_title": "<strong>Вирівнювання:</strong>",
        "alignment": [
          "Используется принцип <strong>визуальной иерархии</strong>: более важные элементы располагаются выше или визуально доминируют.",
          "<strong>Вертикальный поток:</strong> Контент на экранах организуется сверху вниз: Заголовок → Поле ввода → Кнопка действия.",
          "<strong>Горизонтальное выравнивание:</strong> Элементы в контейнерах выравниваются по левому краю (для LTR) или правому краю (для RTL), если нет необходимости в центрировании (например, заголовки в шапке).",
          "<strong>Отступы (Padding/Margin):</strong> Используются значения из шкалы, кратной 8px (8, 16, 24, 32, 40, 48 px и т.д.) для создания четких интервалов между элементами и группами элементов."
        ],
        "adaptability_title": "<strong>Адаптивність та Респонсивність:</strong>",
        "adaptability": [
          "Дизайн адаптируется под различные размеры экрана для обеспечения <strong>ценности</strong> (Принцип 2) на любом устройстве.",
          "<strong>Мобільні пристрої:</strong> 320px–767px (Обычно одноколоночный макет).",
          "<strong>Планшеты:</strong> 768px–1023px (Возможно, двухколоночный макет, боковые панели).",
          "<strong>Десктоп:</strong> 1024px+ (Широкий макет, многоколоночный дизайн, боковые панели)."
        ]
      },
      "section6": {
        "title": "6. Принципи Доступності (WCAG 2.1 AA): Дизайн для Всіх (Принцип 5: Здоров'я, Принцип 7: Цілісність)",
        "intro": "<strong>Доступність — это не опция, а фундаментальное требование</strong> (схоже с Принципом 5: Здоров'я как Фундамент) для создания <strong>целостного</strong> (Принцип 7) и <strong>ценного</strong> (Принцип 2) продукта, которым могут пользоваться все, независимо от их способностей или используемых технологий. Мы стремимся соответствовать уровню WCAG 2.1 AA.",
        "principles": [
          "<strong>Контрастность Кольорів:</strong> Текстовые элементы должны иметь минимальный контраст 4.5:1 (для обычного текста) и 3:1 (для крупного текста или иконок) по отношению к фону. Это проверяется для обеих тем (Light/Dark).",
          "<strong>Навігація з Клавіатури:</strong> Все интерактивные элементы (кнопки, посилання, поля ввода) должны быть доступны для навигации с помощью клавиатуры (Tab, Shift+Tab) и активации (Enter, Space).",
          "<strong>Підтримка Екранних Читалок (Screen Readers):</strong> Использование семантической разметки (HTML) и ARIA-атрибутов для предоставления контекста и информации пользователям экранных читалок (например, описания для иконок, состояния элементов).",
          "<strong>Візуальний Индикатор Фокуса:</strong> Для пользователей клавиатуры должен быть четкий и видимый индикатор текущего сфокусированного элемента (например, синяя обводка `#007BFF`).",
          "<strong>Обробка Помилок:</strong> Сообщения об ошибках должны быть четкими, понятными и легко определяемыми пользователями, включая пользователей экранных читалок.",
          "<strong>Підтримка RTL (Справа Налево):</strong> Дизайн адаптируется для языков с направлением письма справа налево (например, арабский), включая зеркальное отображение макета, иконок и текста (см. DocLocIn.md)."
        ]
      },
      "section7": {
        "title": "7. Примітки та Рекомендації",
        "notes": [
          "<strong>Кастомизация Пользователем:</strong> Помните, что некоторые аспекты дизайна (цвета чатов, шрифты) пользователь может изменять в настройках. Дизайн системы должен учитывать эту гибкость.",
          "<strong>Тестирование на Реальных Устройствах:</strong> Все компоненты дизайна необходимо тестировать на разнообразных устройствах, с различными разрешениями экрана и в разных условиях освещения, чтобы убедиться в их эффективности и доступности.",
          "<strong>Живая Документация:</strong> Эта дизайн-система — живой документ. Она будет дополняться новыми компонентами, шаблонами и рекомендациями по мере развития продукта, отражая принципы <strong>непрерывного совершенствования</strong> (Принцип 1) и <strong>системного подхода</strong> (Принцип 9).",
          "<strong>Дизайн как часть Процесса Кайдзен:</strong> Дизайн-решения анализируются и улучшаются на основе обратной связи и реального использования, интегрируясь в общий процесс Кайдзен (Принцип 9, 14)."
        ]
      }
    },
    "localizationGuide": {
      "title": "Руководство по Локализации BrainMessenger",
      "subtitle": "Доступность и Масштабирование",
      "section1": {
        "title": "1. Введение: Расширение Ценности через Доступность",
        "name": "BrainMessenger Design System",
        "description": "Это руководство описывает процесс локализации BrainMessenger — ключевой шаг для обеспечения доступности и ценности (Принцип 2) продукта для широкой аудитории по всему миру. Мы рассматриваем локализацию не просто как перевод строк, а как систематический процесс (Принцип 9) адаптации интерфейса и контента, который позволит нам масштабировать наше влияние (Принцип 2, 8).",
        "goal": "Сделать BrainMessenger понятным и удобным для пользователей из разных культур, начиная с базового набора языков и создавая надежную систему (Принцип 9) для легкого добавления новых в будущем.",
        "current_status": "Базовая поддержка английского языка (MVP). Идет планирование и подготовка к добавлению новых языков в рамках текущих этапов разработки (см. Дорожную карту).",
        "principles_title": "Принципы, которыми руководствуется локализация:",
        "principles": [
          "Создание Ценности (Принцип 2): Локализация напрямую повышает ценность продукта для неанглоязычных пользователей.",
          "Система и Оптимизация (Принцип 9): Процесс локализации строится как четкая, повторяемая система для эффективности.",
          "Прагматизм и Реализм (Принцип 12): Выбор начального набора языков основывается на потенциальном охвате и ресурсах.",
          "Внешняя Экспертиза и Обратная Связь (Принцип 14): Привлечение профессиональных переводчиков и сбор обратной связи от пользователей на разных языках."
        ]
      },
      "section2": {
        "title": "2. Цели Локализации",
        "goals": [
          "Обеспечить поддержку минимум 5 ключевых языков (Английский, Испанский, Французский, Русский, Арабский) для старта MVP — (Требование NFR-11, соответствующее Принципу 12: Прагматизм).",
          "Реализовать адаптацию пользовательского интерфейса для языков с направлением письма справа налево (RTL), таких как арабский (Принцип 2: Доступность).",
          "Поддерживать единообразие терминологии и стиля во всех переводах, используя централизованные инструменты (Принцип 9: Система).",
          "Создать эффективный и простой процесс добавления новых языков по мере роста базы пользователей и поступления запросов (Принцип 9: Масштабирование, Принцип 12: Прагматизм, Принцип 14: Обратная связь)."
        ]
      },
      "section3": {
        "title": "3. Инструменты и Технологии: Надежный Фундамент (Принцип 8, 9)",
        "intro": "Выбор инструментов основан на прагматизме (Принцип 12), надежности и поддержке системного подхода (Принцип 9).",
        "tools_table": [
          ["Инструмент", "Назначение", "Установка/Конфигурация"],
          ["i18next", "Основная библиотека для управления переводами в Frontend (React Native). Поддерживает интерполяцию, контексты.", "npm install i18next react-i18next"],
          ["react-intl", "Библиотека для локализованного форматирования дат, чисел, валют в Frontend.", "npm install react-intl"],
          ["Transifex", "Профессиональная платформа для управления переводами, привлечения переводчиков и обеспечения качества перевода.", "Регистрация на transifex.com"],
          ["rtlcss", "Утилита для автоматической трансформации CSS-стилей для поддержки RTL-языков.", "npm install -g rtlcss (глобально) или npm install rtlcss --save-dev"],
          ["JSON файлы", "Формат хранения переводов.", "Стандартный."]
        ]
      },
      "section4": {
        "title": "4. Структура Файлов Переводов: Порядок в Системе (Принцип 9)",
        "intro": "Переводы организованы в четкой файловой структуре для удобства управления (Принцип 9: Система).",
        "location_title": "4.1. Расположение",
        "location_content": "Файлы переводов хранятся в директории locales внутри frontend/src:\n\nfrontend/\n├── src/\n│ ├── locales/\n│ │ ├── en.json # Английский (базовый)\n│ │ ├── es.json # Испанский\n│ │ ├── fr.json # Французский\n│ │ ├── ru.json # Русский\n│ │ ├── ar.json # Арабский (пример RTL)\n│ └── index.ts # Конфигурация i18next",
        "format_title": "4.2. Формат JSON: Контекст и Гибкость",
        "format_content": "Ключи: Используется camelCase. Ключи должны быть описательными и отражать контекст использования строки (например, sendButton вместо просто send).\n\nЗначения: Содержат переводимый текст. Поддерживается интерполяция для вставки динамических данных (например, имена пользователей).",
        "format_example": "Пример en.json:\n\n```json\n{\n  \"welcomeTitle\": \"Welcome to BrainMessenger!\",\n  \"sendButton\": \"Send\",\n  \"errors\": {\n    \"unauthorized\": \"Please log in again to continue.\",\n    \"notFound\": \"The requested item could not be found.\"\n  },\n  \"chat\": {\n    \"newMessageNotification\": \"New message from {{name}}\",\n    \"unreadCount\": \"{{count}} unread messages\"\n  },\n  \"settings\": {\n    \"language\": \"Language\",\n    \"theme\": \"Theme\"\n  }\n}\n```",
        "rtl_flag_title": "4.3. RTL-флаг: Адаптация Интерфейса",
        "rtl_flag_content": "Для языков с направлением справа налево в начало соответствующего JSON-файла добавляется метаданные для индикации:",
        "rtl_flag_example": "```json\n{\n  \"rtl\": true,\n  \"welcomeTitle\": \"مرحبًا بك في BrainMessenger!\"\n  // ... остальные переводы\n}\n```\n\nЭтот флаг используется Frontend-приложением для соответствующей адаптации стилей и макета."
      },
      "section5": {
        "title": "5. Настройка Локализации: Интеграция в Систему (Принцип 9)",
        "intro": "Локализация интегрируется как в Frontend (для отображения переведенного UI), так и в Backend (для возврата локализованных ошибок или уведомлений).",
        "frontend_title": "5.1. Frontend (React Native): Использование i18next",
        "frontend_init_title": "Инициализация i18next:",
        "frontend_init_code": "В главном файле приложения или файла конфигурации (frontend/src/index.ts или подобном):\n\n```jsx\nimport i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\n// Импорт всех файлов локалей\nimport en from './locales/en.json'\nimport es from './locales/es.json'\nimport fr from './locales/fr.json'\nimport ru from './locales/ru.json'\nimport ar from './locales/ar.json'\n\n// Определение ресурсов\nconst resources = {\n  en: { translation: en },\n  es: { translation: es },\n  fr: { translation: fr },\n  ru: { translation: ru },\n  ar: { translation: ar },\n};\n\ni18n\n  .use(initReactI18next) // Подключение react-i18next\n  .init({\n    resources,\n    lng: 'en', // Язык по умолчанию при первом запуске (может определяться по системным настройкам или выбору пользователя)\n    fallbackLng: 'en', // Резервный язык, если текущий перевод отсутствует\n    interpolation: {\n      escapeValue: false // Позволяет использовать HTML теги в переводах (осторожно!)\n    }\n  });\n\nexport default i18n;\n```",
        "frontend_usage_title": "Использование перевода в компонентах:",
        "frontend_usage_code": "Используйте хук useTranslation для доступа к функции t и объекту i18n.\n\n```jsx\nimport { useTranslation } from 'react-i18next';\nimport { Text, Button, View } from 'react-native';\n\nconst WelcomeScreen = () => {\n  const { t, i18n } = useTranslation(); // Получаем функцию t и объект i18n\n\n  return (\n    <View>\n      {/* Использование простого перевода */}\n      <Text>{t('welcomeTitle')}</Text>\n      \n      {/* Использование перевода с интерполяцией */}\n      {/* Предполагается, что где-то есть состояние unreadCount */}\n      <Text>{t('chat.unreadCount', { count: 5 })}</Text> \n\n      {/* Использование перевода для текста кнопки */}\n      <Button title={t('sendButton')} onPress={sendMessage} />\n      \n      {/* Пример смены языка */}\n      <Button title={t('settings.language')} onPress={() => i18n.changeLanguage('ar')} />\n    </View>\n  );\n};\n```",
        "frontend_change_title": "Смена языка:",
        "frontend_change_content": "Язык меняется вызовом i18n.changeLanguage('код_языка'). Обычно это делается в настройках пользователя.",
        "backend_title": "5.2. Backend (NestJS): Локализация Ошибок и Уведомлений",
        "backend_intro": "Backend может возвращать локализованные сообщения об ошибках или уведомления, опираясь на язык, переданный Frontend (например, в заголовке Accept-Language или настройках пользователя).",
        "backend_code": "Использование локализованных сообщений при выбрасывании ошибок:\n\n```typescript\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport { t } from 'i18next'; // Предполагается, что i18next инициализирован и в Backend\n\n// В сервисе или контроллере\nif (!user) {\n  // Определяем язык пользователя (например, из request.headers['accept-language'])\n  const userLang = determineUserLanguage(request); \n  throw new HttpException(t('errors.unauthorized', { lng: userLang }), HttpStatus.UNAUTHORIZED);\n}\n```",
        "backend_note": "Локаль пользователя определяется из заголовка Accept-Language (стандартный подход) или сохраняется в профиле пользователя в базе данных после его выбора в настройках приложения.",
        "rtl_adaptation_title": "5.3. RTL-адаптация (Справа Налево): Зеркальное Отображение Системы",
        "rtl_adaptation_intro": "Для языков с RTL (арабский, иврит и др.) необходимо зеркально отобразить макет и некоторые элементы интерфейса.",
        "rtl_css_title": "Стили (CSS/CSS-in-JS):",
        "rtl_css_code": "Используйте rtlcss в процессе сборки или условные стили в коде. rtlcss автоматически преобразует свойства вроде margin-left, padding-right, text-align: left и т.п. в их RTL-эквиваленты (margin-right, padding-left, text-align: right).\n\n```css\n/* Исходный CSS для LTR */\n.message-bubble {\n  margin-left: 10px;\n  text-align: left;\n}\n/* После обработки rtlcss для RTL */\n.message-bubble {\n  margin-right: 10px;\n  text-align: right;\n}\n```",
        "rtl_rn_title": "React Native:",
        "rtl_rn_code": "React-Native имеет встроенную поддержку RTL через I18nManager.\n\n```jsx\nimport { I18nManager } from 'react-native';\nimport i18n from './index'; // Ваш файл инициализации i18next\n\n// В главном файле приложения, перед рендером\nconst isRTL = i18n.language === 'ar' || i18n.language === 'he'; // Проверяем, является ли текущий язык RTL\n\n// ForceRTL может потребовать перезагрузки приложения для полной силы\nif (isRTL !== I18nManager.isRTL) {\n  I18nManager.forceRTL(isRTL);\n  // Optional: Restart the app to apply RTL layout fully\n  // RNRestart.Restart(); \n}\n\n// Некоторые стили могут требовать ручной адаптации, если auto-conversion недостаточно\nconst containerStyle = {\n  flexDirection: isRTL ? 'row-reverse' : 'row',\n  textAlign: isRTL ? 'right' : 'left',\n};\n```",
        "rtl_icons_title": "Иконки:",
        "rtl_icons_content": "Некоторые иконки (например, стрелки \"назад\", \"далее\") должны быть зеркально отображены для RTL. Это можно делать условно в коде или использовать RTL-ready наборы иконок."
      },
      "section6": {
        "title": "6. Процесс Добавления Нового Языка: Масштабируемая Система (Принцип 9)",
        "intro": "Процесс добавления нового языка построен как четкая, повторяемая последовательность действий для обеспечения эффективности (Принцип 9).",
        "file_title": "Создание базового файла перевода:",
        "file_content": "Скопируйте актуальный en.json (или другой наиболее полный файл) в frontend/src/locales/<code>.json, где <code> — двухбуквенный код нового языка (например, de.json для немецкого).\nДобавьте rtl: true в начало файла, если новый язык RTL.",
        "transifex_title": "Загрузка на платформу переводов (Transifex):",
        "transifex_content": "Загрузите новый файл <code>.json в проект BrainMessenger на Transifex. Система автоматически определит, какие строки нуждаются в переводе.",
        "process_title": "Организация процесса перевода:",
        "process_content": "Назначьте переводчиков (профессионалов или проверенных участников сообщества, Принцип 14) для нового языка в Transifex.\nОтвечайте на их вопросы по контексту строк.\nКонтролируйте прогресс перевода в Transifex.",
        "export_title": "Экспорт и Интеграция перевода:",
        "export_content": "После завершения перевода экспортируйте готовый файл <code>.json из Transifex.\nПоместите его обратно в директорию frontend/src/locales/.\nИмпортируйте новый ресурс в файле инициализации i18next (frontend/src/index.ts) и добавьте его в объект resources.",
        "ui_title": "Добавление опции выбора языка в UI:",
        "ui_content": "Добавьте новый язык в список доступных языков в разделе \"Настройки\" > \"Язык\".",
        "testing_title": "Тестирование:",
        "testing_intro": "Критически важный шаг (Принцип 3: Качество). Переключите язык в настройках приложения.",
        "testing_scenarios": [
          "Корректность перевода всех строк в UI.",
          "Отсутствие обрезки текста (некоторые языки длиннее английского).",
          "Корректное отображение UI для RTL-языков (зеркальность, выравнивание).",
          "Интерполяция и Форматирование: Проверьте экраны, где используются динамические данные (имена, счетчики, даты, числа), убедитесь, что они форматируются правильно для текущей локали.",
          "Локализованные ошибки: Инициируйте различные ошибки (неправильный логин, отсутствие элемента), проверьте, что сообщения об ошибках приходят на выбранном языке."
        ]
      },
      "section7": {
        "title": "7. Поддерживаемые Языки (Начальный Список и План)",
        "intro": "Начальный список языков, выбранный по прагматическим соображениям (Принцип 12) и потенциальному охвату.",
        "languages_table": [
          ["Код", "Язык", "Направление", "Статус", "План (Q 2025)"],
          ["en", "Английский", "LTR", "Реализован (Базовый)", "-"],
          ["es", "Испанский", "LTR", "В плане (Q3)", "Q3"],
          ["fr", "Французский", "LTR", "В плане (Q3)", "Q3"],
          ["ru", "Русский", "LTR", "В плане (Q3)", "Q3"],
          ["ar", "Арабский", "RTL", "В плане (Q3, требуется RTL)", "Q3"]
        ],
        "expansion_note": "Расширение списка: Новые языки будут добавляться на основе обратной связи (Принцип 14) и анализа потенциальной ценности (Принцип 2) для роста аудитории (например, если >10% запросов о поддержке нового языка)."
      },
      "section8": {
        "title": "8. Рекомендации: Лучшие Практики Локализации",
        "dev_title": "8.1. Для Разработчиков (Пишем Код, Готовый к Миру)",
        "dev_points": [
          "Не хардкодьте строки! Все строки, которые видит пользователь, должны быть вынесены в файлы локализации и использоваться через функцию t('ключ') (Принцип 9: Система).",
          "Используйте интерполяцию для строк с переменными данными (t('chat.newMessageNotification', { name: user.name })), а не конкатенацию строк в коде.",
          "Учитывайте плюрализацию (формы единственного/множественного числа) при работе со счетчиками ({{count}} unread messages). i18next и react-intl поддерживают это.",
          "Используйте react-intl для всех операций с датами, числами, валютами, чтобы их формат был корректным для каждой локали (Принцип 3: Качество, Принцип 2: Ценность).",
          "Тестируйте UI с длинными переводами (например, немецкий, который часто длиннее английского) и RTL-языками, чтобы убедиться, что макет не ломается и текст не обрезается (Принцип 3: Качество)."
        ],
        "design_title": "8.2. Для Дизайнеров (Рисуем Макеты, Гибкие к Языкам)",
        "design_points": [
          "Учитывайте, что текст на других языках может быть на 30% (и более) длиннее английского. Оставляйте достаточно пространства в компонентах.",
          "Проектируйте макеты с учетом зеркального отображения для RTL. Иконки направлений, расположение текста и элементов должны меняться (Принцип 2: Доступность)."
        ],
        "translator_title": "8.3. Для Переводчиков (Создаем Понятный Контент)",
        "translator_points": [
          "Сохраняйте контекст. Одно и то же английское слово может переводиться по-разному в зависимости от того, где оно используется (например, \"Send\" для сообщения или для заявки). Платформы вроде Transifex помогают добавлять контекстные комментарии.",
          "Придерживайтесь последовательной терминологии, используйте глоссарий, если он есть.",
          "Сохраняйте тон приложения (дружелюбный, но профессиональный, особенно в системных сообщениях и ошибках).",
          "Используйте возможности интерполяции и плюрализации в файлах перевода."
        ]
      },
      "section9": {
        "title": "9. Форматирование (Даты, Числа, Валюты): Детали, Создающие Качество (Принцип 3)",
        "intro": "Корректное отображение локализованных данных критически важно для качества (Принцип 3) и удобства (Принцип 2).",
        "dates_title": "Даты и Время:",
        "dates_code": "```jsx\nimport { FormattedDate, FormattedTime } from 'react-intl';\n\n// Отобразит дату в формате, соответствующем текущей локали\n<FormattedDate value={new Date()} /> // Например, \"3/14/2025\" (en-US) или \"14.3.2025\" (de-DE)\n<FormattedDate value={new Date()} weekday=\"long\" year=\"numeric\" month=\"long\" day=\"numeric\" /> // \"Friday, March 14, 2025\"\n\n// Отобразит время\n<FormattedTime value={new Date()} /> // Например, \"3:00:00 PM\" (en-US) или \"15:00:00\" (de-DE)\n```",
        "numbers_title": "Числа и Валюты:",
        "numbers_code": "```jsx\nimport { FormattedNumber, FormattedCurrency } from 'react-intl';\n\n// Отобразит число с локальным разделителем тысяч и десятичным знаком\n<FormattedNumber value={1234.56} /> // \"1,234.56\" (en-US) или \"1.234,56\" (de-DE)\n\n// Отобразит число как процент\n<FormattedNumber value={0.75} style=\"percent\" /> // \"75%\"\n\n// Отобразит число как валюту (требует кода валюты)\n<FormattedCurrency value={123.45} currency=\"USD\" /> // \"$123.45\" (en-US)\n```\n\nДля работы с react-intl необходимо обернуть ваше приложение в IntlProvider и загрузить соответствующие данные локали (react-intl/locale-data)."
      },
      "section10": {
        "title": "10. Тестирование Локализации: Гарантия Качества (Принцип 3, 9)",
        "intro": "Тестирование — неотъемлемая часть системы обеспечения качества (Принцип 3, 9).",
        "scenarios_title": "Сценарии Тестирования:",
        "scenarios_points": [
          "Переключение языка: Убедитесь, что смена языка в настройках мгновенно (или после перезапуска, если требуется I18nManager) применяет новый перевод и RTL-макет.",
          "Отображение всех строк: Проверьте основные экраны и диалоги, чтобы убедиться, что все видимые пользователю строки переведены.",
          "Длинный текст: Проверьте UI с языками, известными своей длиной (например, немецкий, русский), чтобы убедиться, что текст не обрезается, элементы не накладываются друг на друга.",
          "RTL-интерфейс: Тщательно проверьте UI на арабском (или другом RTL-языке): направление текста, выравнивание элементов, отображение иконок направлений, положение скроллбаров.",
          "Интерполяция и Форматирование: Проверьте экраны, где используются динамические данные (имена, счетчики, даты, числа), убедитесь, что они форматируются правильно для текущей локали.",
          "Локализованные ошибки: Инициируйте различные ошибки (неправильный логин, отсутствие элемента), проверьте, что сообщения об ошибках приходят на выбранном языке."
        ],
        "tools_title": "Инструменты:",
        "tools_points": [
          "Ручное тестирование: Основной метод. Тестирование на реальных устройствах с разными локалями.",
          "Автоматизированные тесты (Cypress/detox): Можно написать тесты, которые проверяют наличие определенных ключей перевода на странице или даже делают скриншоты UI для сравнения LTR/RTL макетов (Принцип 9: Система)."
        ],
        "criteria_title": "Критерии Успеха Тестирования:",
        "criteria_points": [
          "100% пользовательских строк переведены.",
          "Отсутствие обрезки или наложения текста в UI.",
          "Корректное и полное RTL-отображение для соответствующих языков.",
          "Правильное локализованное форматирование дат, чисел, валют."
        ]
      },
      "section11": {
        "title": "11. Примечания",
        "notes": [
          "План: Полная реализация поддержки 5 ключевых языков запланирована на Q3 2025 (см. Дорожную карту), после завершения этапа построения технологического фундамента и начала разработки MVP.",
          "Масштабирование: Система разработана так, чтобы добавление новых языков в будущем было эффективным (Принцип 9). Основные затраты — это сам перевод.",
          "Ограничения: Технические логи, сообщения сервера для отладки не переводятся. Локализация касается только пользовательского интерфейса и сообщений, предназначенных для конечного пользователя."
        ]
      }
    }
  }
}
